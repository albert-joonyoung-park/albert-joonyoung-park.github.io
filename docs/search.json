[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Albert Joon Park",
    "section": "",
    "text": "Albert Joonyoung Park is an aspiring and dedicated independent data analyst with a diverse background spanning entrepreneurship, eCommerce, manufacturing operations, and database application development. With a strong focus on delivering valuable insights, he collaborates closely with clients to extract meaningful information from diverse datasets across various industries. Additionally, Albert has recently ventured into mortgage brokering, aiming to leverage his data skills to assist individuals in identifying optimal financial solutions tailored to their specific needs. Beyond his professional pursuits, Albert finds joy in spending quality time with his spouse, continuously expanding his expertise in data science, actively participating in the church choir, and honing his piano-playing skills."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Posts",
    "section": "",
    "text": "A Test Blog Post\n\n\nThe first blog post using Quarto.\n\n\n\n\n\n\nJune 1, 2022\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Greetings from Albert J. Park",
    "section": "",
    "text": "Hello, I’m Albert Joonyoung Park.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "posts/my-first-blog.html",
    "href": "posts/my-first-blog.html",
    "title": "A Test Blog Post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/my-first-blog.html#merriweather",
    "href": "posts/my-first-blog.html#merriweather",
    "title": "A Test Blog Post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "posts/my-first-blog.html#columns",
    "href": "posts/my-first-blog.html#columns",
    "title": "A Test Blog Post",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "posts/my-first-blog.html#margin-captions",
    "href": "posts/my-first-blog.html#margin-captions",
    "title": "A Test Blog Post",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "projects/cyclistic-bike-share-analysis.html",
    "href": "projects/cyclistic-bike-share-analysis.html",
    "title": "Case study - Cyclistic Bike-Share Analysis",
    "section": "",
    "text": "Cyclistic is a fictional bike-share company based in Chicago, dedicated to optimizing its future success by maximizing the number of annual memberships. As the director of marketing, you recognize the importance of understanding the distinct usage patterns between casual riders and annual members in order to develop an effective marketing strategy. The goal is to convert casual riders into loyal annual members, ultimately driving the company’s growth.\n\n\n\n\nCyclistic: A bike-share program that features more than 5,800 bicycles and 600 docking stations. Cyclistic sets itself apart by also offering reclining bikes, hand tricycles, and cargo bikes, making bike-share more inclusive to people with disabilities and riders who can’t use a standard two-wheeled bike. The majority of riders opt for traditional bikes; about 8% of riders use the assistive options. Cyclistic users are more likely to ride for leisure, but about 30% use them to commute to work each day.\nLily Moreno: The director of marketing and your manager. Moreno is responsible for the development of campaigns and initiatives to promote the bike-share program. These may include email, social media, and other channels.\nCyclistic marketing analytics team: A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy. You joined this team six months ago and have been busy learning about Cyclistic’s mission and business goals — as well as how you, as a junior data analyst, can help Cyclistic achieve them.\nCyclistic executive team: The notoriously detail-oriented executive team will decide whether to approve the recommended marketing program.\n\n\n\n\nIn 2016, Cyclistic launched a successful bike-share offering. Since then, the program has grown to a fleet of 5,824 bicycles that are geotracked and locked into a network of 692 stations across Chicago. The bikes can be unlocked from one station and returned to any other station in the system anytime.\nUntil now, Cyclistic’s marketing strategy relied on building general awareness and appealing to broad consumer segments. One approach that helped make these things possible was the flexibility of its pricing plans: single-ride passes, full-day passes, and annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers who purchase annual memberships are Cyclistic members.\nCyclistic’s finance analysts have concluded that annual members are much more profitable than casual riders. Although the pricing flexibility helps Cyclistic attract more customers, Moreno believes that maximizing the number of annual members will be key to future growth. Rather than creating a marketing campaign that targets all-new customers, Moreno believes there is a very good chance to convert casual riders into members. She notes that casual riders are already aware of the Cyclistic program and have chosen Cyclistic for their mobility needs.\nMoreno has set a clear goal: Design marketing strategies aimed at converting casual riders into annual members. In order to do that, however, the marketing analyst team needs to better understand how annual members and casual riders differ, why casual riders would buy a membership, and how digital media could affect their marketing tactics. Moreno and her team are interested in analyzing the Cyclistic historical bike trip data to identify trends.\n\n\n\nKey questions to answer:\n\n\n“How do annual members and casual riders use Cyclistic bikes differently?”\n\n\nReport requirements:\n\n\nA clear statement of the business task.\nA description of all data sources used.\nDocumentation of any cleaning or manipulation of data.\nA summary of your analysis.\nSupporting visualizations and key findings.\nYour top three recommendations based on your analysis.\n\n\n\n\n\n\n\n\n\n\n\nR language and its packages are used for processing the data. It is required to have the following R packages installed prior to further data processing.\n\ntidyverse for data import and data wrangling\nlubridate for date functions\nggplot for visualization\n\n\n#---------------------------------------\n# Load required libraries.\n# Packages must be installed first.\n#---------------------------------------\n\noptions(warning = FALSE)\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(leaflet)\n\ngetwd() \n\n[1] \"C:/Users/Joon/git/albert-joonyoung-park.github.io/projects\"\n\n\nStep 1: Load past 12 month’s of data in CSV files into dataframes.\n\n#---------------------------------------\n# Collect data\n#---------------------------------------\noptions(warning = FALSE)\n\ntrip_05 &lt;- read_csv(\"../data/202205-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_05)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_06 &lt;- read_csv(\"../data/202206-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_06)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_07 &lt;- read_csv(\"../data/202207-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_07)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_08 &lt;- read_csv(\"../data/202208-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_08)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_09 &lt;- read_csv(\"../data/202209-divvy-publictripdata.csv\", show_col_types = FALSE)\nspec(trip_09)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_10 &lt;- read_csv(\"../data/202210-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_10)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_11 &lt;- read_csv(\"../data/202211-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_11)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_12 &lt;- read_csv(\"../data/202212-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_12)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_01 &lt;- read_csv(\"../data/202301-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_01)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_02 &lt;- read_csv(\"../data/202302-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_02)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_03 &lt;- read_csv(\"../data/202303-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_03)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_04 &lt;- read_csv(\"../data/202304-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_04)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\n\nStep 2: Inspect and rename column names, if required, to be more meaningful, and make the column names, if required, to be the same across the multiple data frames.\n\n#-------------------------------------------\n# Inspect column names\n#-------------------------------------------\n\ncolnames(trip_01)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_02)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_03)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_04)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_05)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_06)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_07)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_08)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_09)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_10)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_11)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_12)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n\n\n#-------------------------------------------\n# Inspect dataframe structures\n#-------------------------------------------\n\nstr(trip_01)\n\nspc_tbl_ [190,301 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:190301] \"F96D5A74A3E41399\" \"13CB7EB698CEDB88\" \"BD88A2E670661CE5\" \"C90792D034FED968\" ...\n $ rideable_type     : chr [1:190301] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:190301], format: \"2023-01-21 20:05:42\" \"2023-01-10 15:37:36\" ...\n $ ended_at          : POSIXct[1:190301], format: \"2023-01-21 20:16:33\" \"2023-01-10 15:46:05\" ...\n $ start_station_name: chr [1:190301] \"Lincoln Ave & Fullerton Ave\" \"Kimbark Ave & 53rd St\" \"Western Ave & Lunt Ave\" \"Kimbark Ave & 53rd St\" ...\n $ start_station_id  : chr [1:190301] \"TA1309000058\" \"TA1309000037\" \"RP-005\" \"TA1309000037\" ...\n $ end_station_name  : chr [1:190301] \"Hampden Ct & Diversey Ave\" \"Greenwood Ave & 47th St\" \"Valli Produce - Evanston Plaza\" \"Greenwood Ave & 47th St\" ...\n $ end_station_id    : chr [1:190301] \"202480.0\" \"TA1308000002\" \"599\" \"TA1308000002\" ...\n $ start_lat         : num [1:190301] 41.9 41.8 42 41.8 41.8 ...\n $ start_lng         : num [1:190301] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:190301] 41.9 41.8 42 41.8 41.8 ...\n $ end_lng           : num [1:190301] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:190301] \"member\" \"member\" \"casual\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_02)\n\nspc_tbl_ [190,445 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:190445] \"CBCD0D7777F0E45F\" \"F3EC5FCE5FF39DE9\" \"E54C1F27FA9354FF\" \"3D561E04F739CC45\" ...\n $ rideable_type     : chr [1:190445] \"classic_bike\" \"electric_bike\" \"classic_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:190445], format: \"2023-02-14 11:59:42\" \"2023-02-15 13:53:48\" ...\n $ ended_at          : POSIXct[1:190445], format: \"2023-02-14 12:13:38\" \"2023-02-15 13:59:08\" ...\n $ start_station_name: chr [1:190445] \"Southport Ave & Clybourn Ave\" \"Clarendon Ave & Gordon Ter\" \"Southport Ave & Clybourn Ave\" \"Southport Ave & Clybourn Ave\" ...\n $ start_station_id  : chr [1:190445] \"TA1309000030\" \"13379\" \"TA1309000030\" \"TA1309000030\" ...\n $ end_station_name  : chr [1:190445] \"Clark St & Schiller St\" \"Sheridan Rd & Lawrence Ave\" \"Aberdeen St & Monroe St\" \"Franklin St & Adams St (Temp)\" ...\n $ end_station_id    : chr [1:190445] \"TA1309000024\" \"TA1309000041\" \"13156\" \"TA1309000008\" ...\n $ start_lat         : num [1:190445] 41.9 42 41.9 41.9 41.8 ...\n $ start_lng         : num [1:190445] -87.7 -87.6 -87.7 -87.7 -87.6 ...\n $ end_lat           : num [1:190445] 41.9 42 41.9 41.9 41.8 ...\n $ end_lng           : num [1:190445] -87.6 -87.7 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:190445] \"casual\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_03)\n\nspc_tbl_ [258,678 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:258678] \"6842AA605EE9FBB3\" \"F984267A75B99A8C\" \"FF7CF57CFE026D02\" \"6B61B916032CB6D6\" ...\n $ rideable_type     : chr [1:258678] \"electric_bike\" \"electric_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:258678], format: \"2023-03-16 08:20:34\" \"2023-03-04 14:07:06\" ...\n $ ended_at          : POSIXct[1:258678], format: \"2023-03-16 08:22:52\" \"2023-03-04 14:15:31\" ...\n $ start_station_name: chr [1:258678] \"Clark St & Armitage Ave\" \"Public Rack - Kedzie Ave & Argyle St\" \"Orleans St & Chestnut St (NEXT Apts)\" \"Desplaines St & Kinzie St\" ...\n $ start_station_id  : chr [1:258678] \"13146\" \"491\" \"620\" \"TA1306000003\" ...\n $ end_station_name  : chr [1:258678] \"Larrabee St & Webster Ave\" NA \"Clark St & Randolph St\" \"Sheffield Ave & Kingsbury St\" ...\n $ end_station_id    : chr [1:258678] \"13193\" NA \"TA1305000030\" \"13154\" ...\n $ start_lat         : num [1:258678] 41.9 42 41.9 41.9 41.9 ...\n $ start_lng         : num [1:258678] -87.6 -87.7 -87.6 -87.6 -87.7 ...\n $ end_lat           : num [1:258678] 41.9 42 41.9 41.9 41.9 ...\n $ end_lng           : num [1:258678] -87.6 -87.7 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:258678] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_04)\n\nspc_tbl_ [426,590 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:426590] \"8FE8F7D9C10E88C7\" \"34E4ED3ADF1D821B\" \"5296BF07A2F77CB5\" \"40759916B76D5D52\" ...\n $ rideable_type     : chr [1:426590] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:426590], format: \"2023-04-02 08:37:28\" \"2023-04-19 11:29:02\" ...\n $ ended_at          : POSIXct[1:426590], format: \"2023-04-02 08:41:37\" \"2023-04-19 11:52:12\" ...\n $ start_station_name: chr [1:426590] NA NA NA NA ...\n $ start_station_id  : chr [1:426590] NA NA NA NA ...\n $ end_station_name  : chr [1:426590] NA NA NA NA ...\n $ end_station_id    : chr [1:426590] NA NA NA NA ...\n $ start_lat         : num [1:426590] 41.8 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:426590] -87.6 -87.7 -87.7 -87.7 -87.7 ...\n $ end_lat           : num [1:426590] 41.8 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:426590] -87.6 -87.7 -87.7 -87.7 -87.6 ...\n $ member_casual     : chr [1:426590] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_05)\n\nspc_tbl_ [634,858 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:634858] \"EC2DE40644C6B0F4\" \"1C31AD03897EE385\" \"1542FBEC830415CF\" \"6FF59852924528F8\" ...\n $ rideable_type     : chr [1:634858] \"classic_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:634858], format: \"2022-05-23 23:06:58\" \"2022-05-11 08:53:28\" ...\n $ ended_at          : POSIXct[1:634858], format: \"2022-05-23 23:40:19\" \"2022-05-11 09:31:22\" ...\n $ start_station_name: chr [1:634858] \"Wabash Ave & Grand Ave\" \"DuSable Lake Shore Dr & Monroe St\" \"Clinton St & Madison St\" \"Clinton St & Madison St\" ...\n $ start_station_id  : chr [1:634858] \"TA1307000117\" \"13300\" \"TA1305000032\" \"TA1305000032\" ...\n $ end_station_name  : chr [1:634858] \"Halsted St & Roscoe St\" \"Field Blvd & South Water St\" \"Wood St & Milwaukee Ave\" \"Clark St & Randolph St\" ...\n $ end_station_id    : chr [1:634858] \"TA1309000025\" \"15534\" \"13221\" \"TA1305000030\" ...\n $ start_lat         : num [1:634858] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:634858] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:634858] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:634858] -87.6 -87.6 -87.7 -87.6 -87.7 ...\n $ member_casual     : chr [1:634858] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_06)\n\nspc_tbl_ [769,204 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:769204] \"600CFD130D0FD2A4\" \"F5E6B5C1682C6464\" \"B6EB6D27BAD771D2\" \"C9C320375DE1D5C6\" ...\n $ rideable_type     : chr [1:769204] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:769204], format: \"2022-06-30 17:27:53\" \"2022-06-30 18:39:52\" ...\n $ ended_at          : POSIXct[1:769204], format: \"2022-06-30 17:35:15\" \"2022-06-30 18:47:28\" ...\n $ start_station_name: chr [1:769204] NA NA NA NA ...\n $ start_station_id  : chr [1:769204] NA NA NA NA ...\n $ end_station_name  : chr [1:769204] NA NA NA NA ...\n $ end_station_id    : chr [1:769204] NA NA NA NA ...\n $ start_lat         : num [1:769204] 41.9 41.9 41.9 41.8 41.9 ...\n $ start_lng         : num [1:769204] -87.6 -87.6 -87.7 -87.7 -87.6 ...\n $ end_lat           : num [1:769204] 41.9 41.9 41.9 41.8 41.9 ...\n $ end_lng           : num [1:769204] -87.6 -87.6 -87.6 -87.7 -87.6 ...\n $ member_casual     : chr [1:769204] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_07)\n\nspc_tbl_ [823,488 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:823488] \"954144C2F67B1932\" \"292E027607D218B6\" \"57765852588AD6E0\" \"B5B6BE44314590E6\" ...\n $ rideable_type     : chr [1:823488] \"classic_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:823488], format: \"2022-07-05 08:12:47\" \"2022-07-26 12:53:38\" ...\n $ ended_at          : POSIXct[1:823488], format: \"2022-07-05 08:24:32\" \"2022-07-26 12:55:31\" ...\n $ start_station_name: chr [1:823488] \"Ashland Ave & Blackhawk St\" \"Buckingham Fountain (Temp)\" \"Buckingham Fountain (Temp)\" \"Buckingham Fountain (Temp)\" ...\n $ start_station_id  : chr [1:823488] \"13224\" \"15541\" \"15541\" \"15541\" ...\n $ end_station_name  : chr [1:823488] \"Kingsbury St & Kinzie St\" \"Michigan Ave & 8th St\" \"Michigan Ave & 8th St\" \"Woodlawn Ave & 55th St\" ...\n $ end_station_id    : chr [1:823488] \"KA1503000043\" \"623\" \"623\" \"TA1307000164\" ...\n $ start_lat         : num [1:823488] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:823488] -87.7 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:823488] 41.9 41.9 41.9 41.8 41.9 ...\n $ end_lng           : num [1:823488] -87.6 -87.6 -87.6 -87.6 -87.7 ...\n $ member_casual     : chr [1:823488] \"member\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_08)\n\nspc_tbl_ [785,932 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:785932] \"550CF7EFEAE0C618\" \"DAD198F405F9C5F5\" \"E6F2BC47B65CB7FD\" \"F597830181C2E13C\" ...\n $ rideable_type     : chr [1:785932] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:785932], format: \"2022-08-07 21:34:15\" \"2022-08-08 14:39:21\" ...\n $ ended_at          : POSIXct[1:785932], format: \"2022-08-07 21:41:46\" \"2022-08-08 14:53:23\" ...\n $ start_station_name: chr [1:785932] NA NA NA NA ...\n $ start_station_id  : chr [1:785932] NA NA NA NA ...\n $ end_station_name  : chr [1:785932] NA NA NA NA ...\n $ end_station_id    : chr [1:785932] NA NA NA NA ...\n $ start_lat         : num [1:785932] 41.9 41.9 42 41.9 41.9 ...\n $ start_lng         : num [1:785932] -87.7 -87.6 -87.7 -87.7 -87.7 ...\n $ end_lat           : num [1:785932] 41.9 41.9 42 42 41.8 ...\n $ end_lng           : num [1:785932] -87.7 -87.6 -87.7 -87.7 -87.7 ...\n $ member_casual     : chr [1:785932] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_09)\n\nspc_tbl_ [701,339 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:701339] \"5156990AC19CA285\" \"E12D4A16BF51C274\" \"A02B53CD7DB72DD7\" \"C82E05FEE872DF11\" ...\n $ rideable_type     : chr [1:701339] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:701339], format: \"2022-09-01 08:36:22\" \"2022-09-01 17:11:29\" ...\n $ ended_at          : POSIXct[1:701339], format: \"2022-09-01 08:39:05\" \"2022-09-01 17:14:45\" ...\n $ start_station_name: chr [1:701339] NA NA NA NA ...\n $ start_station_id  : chr [1:701339] NA NA NA NA ...\n $ end_station_name  : chr [1:701339] \"California Ave & Milwaukee Ave\" NA NA NA ...\n $ end_station_id    : chr [1:701339] \"13084\" NA NA NA ...\n $ start_lat         : num [1:701339] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:701339] -87.7 -87.6 -87.6 -87.7 -87.7 ...\n $ end_lat           : num [1:701339] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:701339] -87.7 -87.6 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:701339] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_10)\n\nspc_tbl_ [558,685 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:558685] \"A50255C1E17942AB\" \"DB692A70BD2DD4E3\" \"3C02727AAF60F873\" \"47E653FDC2D99236\" ...\n $ rideable_type     : chr [1:558685] \"classic_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:558685], format: \"2022-10-14 17:13:30\" \"2022-10-01 16:29:26\" ...\n $ ended_at          : POSIXct[1:558685], format: \"2022-10-14 17:19:39\" \"2022-10-01 16:49:06\" ...\n $ start_station_name: chr [1:558685] \"Noble St & Milwaukee Ave\" \"Damen Ave & Charleston St\" \"Hoyne Ave & Balmoral Ave\" \"Rush St & Cedar St\" ...\n $ start_station_id  : chr [1:558685] \"13290\" \"13288\" \"655\" \"KA1504000133\" ...\n $ end_station_name  : chr [1:558685] \"Larrabee St & Division St\" \"Damen Ave & Cullerton St\" \"Western Ave & Leland Ave\" \"Orleans St & Chestnut St (NEXT Apts)\" ...\n $ end_station_id    : chr [1:558685] \"KA1504000079\" \"13089\" \"TA1307000140\" \"620\" ...\n $ start_lat         : num [1:558685] 41.9 41.9 42 41.9 41.9 ...\n $ start_lng         : num [1:558685] -87.7 -87.7 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:558685] 41.9 41.9 42 41.9 41.9 ...\n $ end_lng           : num [1:558685] -87.6 -87.7 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:558685] \"member\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_11)\n\nspc_tbl_ [337,735 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:337735] \"BCC66FC6FAB27CC7\" \"772AB67E902C180F\" \"585EAD07FDEC0152\" \"91C4E7ED3C262FF9\" ...\n $ rideable_type     : chr [1:337735] \"electric_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:337735], format: \"2022-11-10 06:21:55\" \"2022-11-04 07:31:55\" ...\n $ ended_at          : POSIXct[1:337735], format: \"2022-11-10 06:31:27\" \"2022-11-04 07:46:25\" ...\n $ start_station_name: chr [1:337735] \"Canal St & Adams St\" \"Canal St & Adams St\" \"Indiana Ave & Roosevelt Rd\" \"Indiana Ave & Roosevelt Rd\" ...\n $ start_station_id  : chr [1:337735] \"13011\" \"13011\" \"SL-005\" \"SL-005\" ...\n $ end_station_name  : chr [1:337735] \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" ...\n $ end_station_id    : chr [1:337735] \"13016\" \"13016\" \"13016\" \"13016\" ...\n $ start_lat         : num [1:337735] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:337735] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:337735] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:337735] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ member_casual     : chr [1:337735] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_12)\n\nspc_tbl_ [181,806 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:181806] \"65DBD2F447EC51C2\" \"0C201AA7EA0EA1AD\" \"E0B148CCB358A49D\" \"54C5775D2B7C9188\" ...\n $ rideable_type     : chr [1:181806] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:181806], format: \"2022-12-05 10:47:18\" \"2022-12-18 06:42:33\" ...\n $ ended_at          : POSIXct[1:181806], format: \"2022-12-05 10:56:34\" \"2022-12-18 07:08:44\" ...\n $ start_station_name: chr [1:181806] \"Clifton Ave & Armitage Ave\" \"Broadway & Belmont Ave\" \"Sangamon St & Lake St\" \"Shields Ave & 31st St\" ...\n $ start_station_id  : chr [1:181806] \"TA1307000163\" \"13277\" \"TA1306000015\" \"KA1503000038\" ...\n $ end_station_name  : chr [1:181806] \"Sedgwick St & Webster Ave\" \"Sedgwick St & Webster Ave\" \"St. Clair St & Erie St\" \"Damen Ave & Madison St\" ...\n $ end_station_id    : chr [1:181806] \"13191\" \"13191\" \"13016\" \"13134\" ...\n $ start_lat         : num [1:181806] 41.9 41.9 41.9 41.8 41.9 ...\n $ start_lng         : num [1:181806] -87.7 -87.6 -87.7 -87.6 -87.7 ...\n $ end_lat           : num [1:181806] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:181806] -87.6 -87.6 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:181806] \"member\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n#-------------------------------------------\n# Merge all dataframes into one\n#-------------------------------------------\nall_trips &lt;- bind_rows(trip_01, trip_02, trip_03,\n                       trip_04, trip_05, trip_06,\n                       trip_07, trip_08, trip_09,\n                       trip_10, trip_11, trip_12,)\n\nglimpse(all_trips)\n\nRows: 5,859,061\nColumns: 13\n$ ride_id            &lt;chr&gt; \"F96D5A74A3E41399\", \"13CB7EB698CEDB88\", \"BD88A2E670…\n$ rideable_type      &lt;chr&gt; \"electric_bike\", \"classic_bike\", \"electric_bike\", \"…\n$ started_at         &lt;dttm&gt; 2023-01-21 20:05:42, 2023-01-10 15:37:36, 2023-01-…\n$ ended_at           &lt;dttm&gt; 2023-01-21 20:16:33, 2023-01-10 15:46:05, 2023-01-…\n$ start_station_name &lt;chr&gt; \"Lincoln Ave & Fullerton Ave\", \"Kimbark Ave & 53rd …\n$ start_station_id   &lt;chr&gt; \"TA1309000058\", \"TA1309000037\", \"RP-005\", \"TA130900…\n$ end_station_name   &lt;chr&gt; \"Hampden Ct & Diversey Ave\", \"Greenwood Ave & 47th …\n$ end_station_id     &lt;chr&gt; \"202480.0\", \"TA1308000002\", \"599\", \"TA1308000002\", …\n$ start_lat          &lt;dbl&gt; 41.92407, 41.79957, 42.00857, 41.79957, 41.79957, 4…\n$ start_lng          &lt;dbl&gt; -87.64628, -87.59475, -87.69048, -87.59475, -87.594…\n$ end_lat            &lt;dbl&gt; 41.93000, 41.80983, 42.03974, 41.80983, 41.80983, 4…\n$ end_lng            &lt;dbl&gt; -87.64000, -87.59938, -87.69941, -87.59938, -87.599…\n$ member_casual      &lt;chr&gt; \"member\", \"member\", \"casual\", \"member\", \"member\", \"…\n\n\n\n#---------------------------------------------------------------\n# Data inspection, clean-up and manipulation for analysis\n#---------------------------------------------------------------\nhead(all_trips)\n\n# A tibble: 6 × 13\n  ride_id          rideable_type started_at          ended_at           \n  &lt;chr&gt;            &lt;chr&gt;         &lt;dttm&gt;              &lt;dttm&gt;             \n1 F96D5A74A3E41399 electric_bike 2023-01-21 20:05:42 2023-01-21 20:16:33\n2 13CB7EB698CEDB88 classic_bike  2023-01-10 15:37:36 2023-01-10 15:46:05\n3 BD88A2E670661CE5 electric_bike 2023-01-02 07:51:57 2023-01-02 08:05:11\n4 C90792D034FED968 classic_bike  2023-01-22 10:52:58 2023-01-22 11:01:44\n5 3397017529188E8A classic_bike  2023-01-12 13:58:01 2023-01-12 14:13:20\n6 58E68156DAE3E311 electric_bike 2023-01-31 07:18:03 2023-01-31 07:21:16\n# ℹ 9 more variables: start_station_name &lt;chr&gt;, start_station_id &lt;chr&gt;,\n#   end_station_name &lt;chr&gt;, end_station_id &lt;chr&gt;, start_lat &lt;dbl&gt;,\n#   start_lng &lt;dbl&gt;, end_lat &lt;dbl&gt;, end_lng &lt;dbl&gt;, member_casual &lt;chr&gt;\n\ntail(all_trips)\n\n# A tibble: 6 × 13\n  ride_id          rideable_type started_at          ended_at           \n  &lt;chr&gt;            &lt;chr&gt;         &lt;dttm&gt;              &lt;dttm&gt;             \n1 7BDEDE9860418B53 classic_bike  2022-12-07 06:52:45 2022-12-07 06:56:36\n2 43ABEE85B6E15DCA classic_bike  2022-12-05 06:51:04 2022-12-05 06:54:48\n3 F041C89A3D1F0270 electric_bike 2022-12-14 17:06:28 2022-12-14 17:19:27\n4 A2BECB88430BE156 classic_bike  2022-12-08 16:27:47 2022-12-08 16:32:20\n5 37B392960E566F58 classic_bike  2022-12-28 09:37:38 2022-12-28 09:41:34\n6 2DD1587210BA45AE classic_bike  2022-12-09 00:27:25 2022-12-09 00:35:28\n# ℹ 9 more variables: start_station_name &lt;chr&gt;, start_station_id &lt;chr&gt;,\n#   end_station_name &lt;chr&gt;, end_station_id &lt;chr&gt;, start_lat &lt;dbl&gt;,\n#   start_lng &lt;dbl&gt;, end_lat &lt;dbl&gt;, end_lng &lt;dbl&gt;, member_casual &lt;chr&gt;\n\ncolnames(all_trips)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\nnrow(all_trips)\n\n[1] 5859061\n\ndim(all_trips)\n\n[1] 5859061      13\n\nsummary(all_trips)\n\n   ride_id          rideable_type        started_at                    \n Length:5859061     Length:5859061     Min.   :2022-05-01 00:00:06.00  \n Class :character   Class :character   1st Qu.:2022-07-03 11:12:30.00  \n Mode  :character   Mode  :character   Median :2022-08-28 12:44:57.00  \n                                       Mean   :2022-09-19 13:39:54.23  \n                                       3rd Qu.:2022-11-08 06:30:21.00  \n                                       Max.   :2023-04-30 23:59:05.00  \n                                                                       \n    ended_at                      start_station_name start_station_id  \n Min.   :2022-05-01 00:05:17.00   Length:5859061     Length:5859061    \n 1st Qu.:2022-07-03 11:38:52.00   Class :character   Class :character  \n Median :2022-08-28 13:07:09.00   Mode  :character   Mode  :character  \n Mean   :2022-09-19 13:58:50.35                                        \n 3rd Qu.:2022-11-08 06:43:39.00                                        \n Max.   :2023-05-03 10:37:12.00                                        \n                                                                       \n end_station_name   end_station_id       start_lat       start_lng     \n Length:5859061     Length:5859061     Min.   :41.64   Min.   :-87.84  \n Class :character   Class :character   1st Qu.:41.88   1st Qu.:-87.66  \n Mode  :character   Mode  :character   Median :41.90   Median :-87.64  \n                                       Mean   :41.90   Mean   :-87.65  \n                                       3rd Qu.:41.93   3rd Qu.:-87.63  \n                                       Max.   :42.07   Max.   :-87.52  \n                                                                       \n    end_lat         end_lng       member_casual     \n Min.   : 0.00   Min.   :-88.14   Length:5859061    \n 1st Qu.:41.88   1st Qu.:-87.66   Class :character  \n Median :41.90   Median :-87.64   Mode  :character  \n Mean   :41.90   Mean   :-87.65                     \n 3rd Qu.:41.93   3rd Qu.:-87.63                     \n Max.   :42.37   Max.   :  0.00                     \n NA's   :5973    NA's   :5973                       \n\n\nStep 3: Perform further data transformation for data consistency, and fix any issues prior to analysis.\n\n#-------------------------------------------\n# Address any data issues and fix them\n#-------------------------------------------\n\n# Check columns for aggregation level\ndfs_member_casual &lt;- table(all_trips$member_casual)\ndfs_rideable_type &lt;- table(all_trips$rideable_type)\ndfs_member_casual\n\n\n casual  member \n2358307 3500754 \n\ndfs_rideable_type\n\n\n classic_bike   docked_bike electric_bike \n      2642585        170518       3045958 \n\n# Add columns for ride date to increase aggregation level - month, day, year, day of the week\nall_trips &lt;- \n  all_trips |&gt; \n    mutate(\n      start_date = as.Date(started_at),\n      start_month = format(start_date, \"%m\"),\n      start_day = format(start_date, \"%d\"),\n      start_year = format(start_date, \"%Y\"),\n      start_weekday = format(start_date, \"%A\"),\n      .after = started_at\n    )\n\n# Add a column for ride length in seconds for analysis\nall_trips &lt;- \n  all_trips |&gt; \n    mutate(\n      ride_length = as.numeric(difftime(ended_at, started_at)),\n      .after = ended_at\n    )\n\nis.numeric(all_trips$ride_length)\n\n[1] TRUE\n\n# Check structure of the data frame\nstr(all_trips)\n\ntibble [5,859,061 × 19] (S3: tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:5859061] \"F96D5A74A3E41399\" \"13CB7EB698CEDB88\" \"BD88A2E670661CE5\" \"C90792D034FED968\" ...\n $ rideable_type     : chr [1:5859061] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:5859061], format: \"2023-01-21 20:05:42\" \"2023-01-10 15:37:36\" ...\n $ start_date        : Date[1:5859061], format: \"2023-01-21\" \"2023-01-10\" ...\n $ start_month       : chr [1:5859061] \"01\" \"01\" \"01\" \"01\" ...\n $ start_day         : chr [1:5859061] \"21\" \"10\" \"02\" \"22\" ...\n $ start_year        : chr [1:5859061] \"2023\" \"2023\" \"2023\" \"2023\" ...\n $ start_weekday     : chr [1:5859061] \"Saturday\" \"Tuesday\" \"Monday\" \"Sunday\" ...\n $ ended_at          : POSIXct[1:5859061], format: \"2023-01-21 20:16:33\" \"2023-01-10 15:46:05\" ...\n $ ride_length       : num [1:5859061] 651 509 794 526 919 193 840 561 747 753 ...\n $ start_station_name: chr [1:5859061] \"Lincoln Ave & Fullerton Ave\" \"Kimbark Ave & 53rd St\" \"Western Ave & Lunt Ave\" \"Kimbark Ave & 53rd St\" ...\n $ start_station_id  : chr [1:5859061] \"TA1309000058\" \"TA1309000037\" \"RP-005\" \"TA1309000037\" ...\n $ end_station_name  : chr [1:5859061] \"Hampden Ct & Diversey Ave\" \"Greenwood Ave & 47th St\" \"Valli Produce - Evanston Plaza\" \"Greenwood Ave & 47th St\" ...\n $ end_station_id    : chr [1:5859061] \"202480.0\" \"TA1308000002\" \"599\" \"TA1308000002\" ...\n $ start_lat         : num [1:5859061] 41.9 41.8 42 41.8 41.8 ...\n $ start_lng         : num [1:5859061] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:5859061] 41.9 41.8 42 41.8 41.8 ...\n $ end_lng           : num [1:5859061] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:5859061] \"member\" \"member\" \"casual\" \"member\" ...\n\n\nData exclusion - bad data\n\n#-------------------------------------------\n# Exclude data that are not suitable\n#-------------------------------------------\n\n# Remove data that has negative ride length\nall_trips_tidy &lt;- \n  all_trips |&gt; \n    filter(ride_length &gt; 0)\n\n\n\n\nStep 4: Conduct descriptive analysis\n\n# Descriptive analysis on ride_length (all figures in seconds)\n\nmean(all_trips_tidy$ride_length)\n\n[1] 1136.371\n\nmedian(all_trips_tidy$ride_length)\n\n[1] 599\n\nmin(all_trips_tidy$ride_length)\n\n[1] 1\n\nmax(all_trips_tidy$ride_length)\n\n[1] 2483235\n\nsummary(all_trips_tidy$ride_length)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      1     339     599    1136    1075 2483235 \n\n\n\n# Get insights of ride length info for member or casual riders\n\nall_trips_tidy |&gt; \n  group_by(member_casual) |&gt; \n  summarize(\n    mean_ride_length = as.integer(mean(ride_length)),\n    median_ride_length = median(ride_length),\n    min_ride_length = min(ride_length),\n    max_ride_length = max(ride_length)\n  )\n\n# A tibble: 2 × 5\n  member_casual mean_ride_length median_ride_length min_ride_length\n  &lt;chr&gt;                    &lt;int&gt;              &lt;dbl&gt;           &lt;dbl&gt;\n1 casual                    1709                751               1\n2 member                     750                520               1\n# ℹ 1 more variable: max_ride_length &lt;dbl&gt;\n\n\n\n# Average ride_length by each day of the week for members and casual riders\nall_trips_tidy |&gt; \n  group_by(member_casual, start_weekday) |&gt; \n  summarize(mean_ride_length = as.integer(mean(ride_length))) |&gt; \n  arrange(factor(start_weekday, levels = c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")), member_casual)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 14 × 3\n# Groups:   member_casual [2]\n   member_casual start_weekday mean_ride_length\n   &lt;chr&gt;         &lt;chr&gt;                    &lt;int&gt;\n 1 casual        Sunday                    2006\n 2 member        Sunday                     829\n 3 casual        Monday                    1702\n 4 member        Monday                     718\n 5 casual        Tuesday                   1520\n 6 member        Tuesday                    717\n 7 casual        Wednesday                 1450\n 8 member        Wednesday                  713\n 9 casual        Thursday                  1482\n10 member        Thursday                   726\n11 casual        Friday                    1651\n12 member        Friday                     741\n13 casual        Saturday                  1934\n14 member        Saturday                   835\n\n\n\n# Analyze ridership summary data by rider type and weekday\nall_trips_tidy |&gt; \n  mutate(weekday = wday(started_at, label = TRUE)) |&gt; \n  group_by(member_casual, weekday) |&gt; \n  summarise(\n    number_of_rides = n(),\n    average_duration = as.integer(mean(ride_length))\n  ) |&gt; \n  arrange(member_casual, weekday)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 14 × 4\n# Groups:   member_casual [2]\n   member_casual weekday number_of_rides average_duration\n   &lt;chr&gt;         &lt;ord&gt;             &lt;int&gt;            &lt;int&gt;\n 1 casual        Sun              388779             2006\n 2 casual        Mon              275726             1702\n 3 casual        Tue              272624             1520\n 4 casual        Wed              284556             1450\n 5 casual        Thu              318437             1482\n 6 casual        Fri              350053             1651\n 7 casual        Sat              467873             1934\n 8 member        Sun              402040              829\n 9 member        Mon              484532              718\n10 member        Tue              544350              717\n11 member        Wed              556882              713\n12 member        Thu              560837              726\n13 member        Fri              497434              741\n14 member        Sat              454394              835\n\n\nVisualization\n\n# Construct dataframe for visualization\n\ndf_ride_count &lt;- \n  all_trips_tidy |&gt; \n    mutate(weekday = wday(started_at, label = TRUE)) |&gt; \n    group_by(member_casual, weekday) |&gt; \n    summarise(\n      number_of_rides = n(),\n      average_duration = as.integer(mean(ride_length))\n    ) |&gt; \n    arrange(member_casual, weekday)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n\n# Visualize the number of rides by rider type\n\ndf_ride_count |&gt; \n  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +\n    geom_col(position = \"dodge\") +\n    labs(title = \"Ridership by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Number of rides\", fill = \"User type\")\n\n\n\n\n\n# Visualize the average ride duration by rider type\n\ndf_ride_count |&gt; \n  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +\n    geom_col(position = \"dodge\") +\n    labs(title = \"Average Ride Duration (sec.) by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Number of rides\", fill = \"User type\")\n\n\n\n\n\n# Visualize ride duration per weekday\n\nall_trips_tidy |&gt; \n  ggplot(aes(x = start_weekday, y = ride_length, color = member_casual)) +\n    geom_point() +\n    labs(title = \"Ride Duration (sec.) by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Ride duration\", fill = \"User type\")\n\n\n\n\n\n# Visualize rideable type by rider type\n\ndfs_rideable_type_member_casual &lt;- \n  all_trips_tidy |&gt; \n    group_by(member_casual, rideable_type) |&gt; \n    summarize(ride_count = n()) |&gt; \n    arrange(member_casual, ride_count)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n\ndfs_rideable_type_member_casual |&gt; \n  ggplot(aes(x = rideable_type, y = ride_count, fill = member_casual )) +\n    geom_bar(stat = \"identity\") +\n    geom_text(\n      aes(label = ride_count), \n      size = 4,\n      position = position_stack(vjust = 0.5),\n      colour = \"white\"\n    ) +\n    scale_y_continuous(labels = comma)\n\n\n\n\nGeographical mapping of ridership by rider type, using leaflet\n\n# Prepare your data in a smaller set for plotting\n\ndfs_ride_start_loc &lt;- \n  all_trips_tidy |&gt; \n    select(start_station_name, start_lat, start_lng, member_casual) |&gt; \n    group_by(start_station_name, start_lat, start_lng, member_casual) |&gt; \n    summarize(\n      ride_frequency = n()\n      ) |&gt; \n    filter(ride_frequency &gt;= 1200) # limit the ride_frequency &gt;= 1200\n\n`summarise()` has grouped output by 'start_station_name', 'start_lat',\n'start_lng'. You can override using the `.groups` argument.\n\n\n\n# Create a leaflet map centered on Chicago with map view\n# Display both member and casual ridership information\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 12) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~ifelse(member_casual == \"member\", \"blue\", \"red\"),\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\n\n# Create a leaflet map centered on Chicago with map view\n# Display casual ridership information only\n\ndfs_ride_start_loc_casual &lt;- \n  dfs_ride_start_loc |&gt; \n    filter(member_casual == \"casual\")\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 12) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc_casual,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~\"red\",\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\nQuestion: What stations are most frequently used by casual riders in the past 12 months?\n\n# Retrieve frequent station information used by casual riders in the past 12 months\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\ndfs_ride_start_loc_casual &lt;- \n  all_trips_tidy |&gt; \n    filter(member_casual == \"casual\") |&gt; \n    group_by(start_station_id, start_station_name, member_casual) |&gt; \n    summarize(\n      ride_frequency = n(),\n      # need to set \"drop\" option to assign ranking properly later\n      .groups = \"drop\" \n      )\n\ndfs_ride_start_loc_casual &lt;- \n  dfs_ride_start_loc_casual |&gt; \n    arrange(desc(ride_frequency)) |&gt; \n    mutate(rank = rank(-ride_frequency, ties.method = 'min')) |&gt; \n    select(rank, start_station_id, start_station_name, ride_frequency)\n\ndfs_ride_start_loc_casual_ranked &lt;- \n  dfs_ride_start_loc_casual |&gt; \n    rename(\n      \"rank\" = \"rank\", \n      \"station_id\" = \"start_station_id\",\n      \"station_name\" = \"start_station_name\",\n      \"ride_count\" = \"ride_frequency\"\n    )\n\n# Replace NA in station_id and station_name with \"*Unknown*\"\ndfs_ride_start_loc_casual_ranked &lt;- \n  dfs_ride_start_loc_casual_ranked |&gt; \n    mutate_at(c('station_id','station_name'), ~replace_na(.,\"*Unknown*\"))\n  \n# List top 20 stations\ndfs_ride_start_loc_casual_ranked_20 &lt;- dfs_ride_start_loc_casual_ranked[1:20,]\n\n# Create a styled table\nstyled_table &lt;- kable(dfs_ride_start_loc_casual_ranked_20, format = \"html\", align = \"c\")  |&gt; \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\nstyled_table\n\n\n\n\nrank\nstation_id\nstation_name\nride_count\n\n\n\n\n1\n*Unknown*\n*Unknown*\n346314\n\n\n2\n13022\nStreeter Dr & Grand Ave\n57427\n\n\n3\n13300\nDuSable Lake Shore Dr & Monroe St\n32037\n\n\n4\n13042\nMichigan Ave & Oak St\n25380\n\n\n5\n13008\nMillennium Park\n25279\n\n\n6\nLF-005\nDuSable Lake Shore Dr & North Blvd\n23705\n\n\n7\n15544\nShedd Aquarium\n20424\n\n\n8\nTA1308000001\nTheater on the Lake\n18482\n\n\n9\nTA1308000050\nWells St & Concord Ln\n16482\n\n\n10\nKA1503000064\nDusable Harbor\n14260\n\n\n11\nSL-005\nIndiana Ave & Roosevelt Rd\n13885\n\n\n12\n13146\nClark St & Armitage Ave\n13759\n\n\n13\n13179\nClark St & Lincoln Ave\n13263\n\n\n14\nTA1307000039\nClark St & Elm St\n13085\n\n\n15\nTA1308000012\nMontrose Harbor\n12834\n\n\n16\n13137\nBroadway & Barry Ave\n12482\n\n\n17\nKA1504000135\nWells St & Elm St\n12459\n\n\n18\n632\nClark St & Newport St\n12409\n\n\n19\nTA1307000134\nWilton Ave & Belmont Ave\n11912\n\n\n20\nTA1307000117\nWabash Ave & Grand Ave\n11677\n\n\n\n\n\n\n\nExport the summary data that can be used in other tools - SQL, Spreadsheet, Power BI, Tableau\n\nwrite.csv(df_ride_count, file = \"../data/summary_df_ride_count.csv\")"
  },
  {
    "objectID": "projects/cyclistic-bike-share-analysis.html#how-does-a-bike-share-navigate-speedy-success",
    "href": "projects/cyclistic-bike-share-analysis.html#how-does-a-bike-share-navigate-speedy-success",
    "title": "Case study - Cyclistic Bike-Share Analysis",
    "section": "",
    "text": "Cyclistic is a fictional bike-share company based in Chicago, dedicated to optimizing its future success by maximizing the number of annual memberships. As the director of marketing, you recognize the importance of understanding the distinct usage patterns between casual riders and annual members in order to develop an effective marketing strategy. The goal is to convert casual riders into loyal annual members, ultimately driving the company’s growth.\n\n\n\n\nCyclistic: A bike-share program that features more than 5,800 bicycles and 600 docking stations. Cyclistic sets itself apart by also offering reclining bikes, hand tricycles, and cargo bikes, making bike-share more inclusive to people with disabilities and riders who can’t use a standard two-wheeled bike. The majority of riders opt for traditional bikes; about 8% of riders use the assistive options. Cyclistic users are more likely to ride for leisure, but about 30% use them to commute to work each day.\nLily Moreno: The director of marketing and your manager. Moreno is responsible for the development of campaigns and initiatives to promote the bike-share program. These may include email, social media, and other channels.\nCyclistic marketing analytics team: A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy. You joined this team six months ago and have been busy learning about Cyclistic’s mission and business goals — as well as how you, as a junior data analyst, can help Cyclistic achieve them.\nCyclistic executive team: The notoriously detail-oriented executive team will decide whether to approve the recommended marketing program.\n\n\n\n\nIn 2016, Cyclistic launched a successful bike-share offering. Since then, the program has grown to a fleet of 5,824 bicycles that are geotracked and locked into a network of 692 stations across Chicago. The bikes can be unlocked from one station and returned to any other station in the system anytime.\nUntil now, Cyclistic’s marketing strategy relied on building general awareness and appealing to broad consumer segments. One approach that helped make these things possible was the flexibility of its pricing plans: single-ride passes, full-day passes, and annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers who purchase annual memberships are Cyclistic members.\nCyclistic’s finance analysts have concluded that annual members are much more profitable than casual riders. Although the pricing flexibility helps Cyclistic attract more customers, Moreno believes that maximizing the number of annual members will be key to future growth. Rather than creating a marketing campaign that targets all-new customers, Moreno believes there is a very good chance to convert casual riders into members. She notes that casual riders are already aware of the Cyclistic program and have chosen Cyclistic for their mobility needs.\nMoreno has set a clear goal: Design marketing strategies aimed at converting casual riders into annual members. In order to do that, however, the marketing analyst team needs to better understand how annual members and casual riders differ, why casual riders would buy a membership, and how digital media could affect their marketing tactics. Moreno and her team are interested in analyzing the Cyclistic historical bike trip data to identify trends.\n\n\n\nKey questions to answer:\n\n\n“How do annual members and casual riders use Cyclistic bikes differently?”\n\n\nReport requirements:\n\n\nA clear statement of the business task.\nA description of all data sources used.\nDocumentation of any cleaning or manipulation of data.\nA summary of your analysis.\nSupporting visualizations and key findings.\nYour top three recommendations based on your analysis.\n\n\n\n\n\n\n\n\n\n\n\nR language and its packages are used for processing the data. It is required to have the following R packages installed prior to further data processing.\n\ntidyverse for data import and data wrangling\nlubridate for date functions\nggplot for visualization\n\n\n#---------------------------------------\n# Load required libraries.\n# Packages must be installed first.\n#---------------------------------------\n\noptions(warning = FALSE)\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(leaflet)\n\ngetwd() \n\n[1] \"C:/Users/Joon/git/albert-joonyoung-park.github.io/projects\"\n\n\nStep 1: Load past 12 month’s of data in CSV files into dataframes.\n\n#---------------------------------------\n# Collect data\n#---------------------------------------\noptions(warning = FALSE)\n\ntrip_05 &lt;- read_csv(\"../data/202205-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_05)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_06 &lt;- read_csv(\"../data/202206-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_06)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_07 &lt;- read_csv(\"../data/202207-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_07)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_08 &lt;- read_csv(\"../data/202208-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_08)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_09 &lt;- read_csv(\"../data/202209-divvy-publictripdata.csv\", show_col_types = FALSE)\nspec(trip_09)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_10 &lt;- read_csv(\"../data/202210-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_10)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_11 &lt;- read_csv(\"../data/202211-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_11)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_12 &lt;- read_csv(\"../data/202212-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_12)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_01 &lt;- read_csv(\"../data/202301-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_01)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_02 &lt;- read_csv(\"../data/202302-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_02)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_03 &lt;- read_csv(\"../data/202303-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_03)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_04 &lt;- read_csv(\"../data/202304-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_04)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\n\nStep 2: Inspect and rename column names, if required, to be more meaningful, and make the column names, if required, to be the same across the multiple data frames.\n\n#-------------------------------------------\n# Inspect column names\n#-------------------------------------------\n\ncolnames(trip_01)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_02)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_03)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_04)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_05)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_06)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_07)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_08)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_09)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_10)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_11)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_12)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n\n\n#-------------------------------------------\n# Inspect dataframe structures\n#-------------------------------------------\n\nstr(trip_01)\n\nspc_tbl_ [190,301 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:190301] \"F96D5A74A3E41399\" \"13CB7EB698CEDB88\" \"BD88A2E670661CE5\" \"C90792D034FED968\" ...\n $ rideable_type     : chr [1:190301] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:190301], format: \"2023-01-21 20:05:42\" \"2023-01-10 15:37:36\" ...\n $ ended_at          : POSIXct[1:190301], format: \"2023-01-21 20:16:33\" \"2023-01-10 15:46:05\" ...\n $ start_station_name: chr [1:190301] \"Lincoln Ave & Fullerton Ave\" \"Kimbark Ave & 53rd St\" \"Western Ave & Lunt Ave\" \"Kimbark Ave & 53rd St\" ...\n $ start_station_id  : chr [1:190301] \"TA1309000058\" \"TA1309000037\" \"RP-005\" \"TA1309000037\" ...\n $ end_station_name  : chr [1:190301] \"Hampden Ct & Diversey Ave\" \"Greenwood Ave & 47th St\" \"Valli Produce - Evanston Plaza\" \"Greenwood Ave & 47th St\" ...\n $ end_station_id    : chr [1:190301] \"202480.0\" \"TA1308000002\" \"599\" \"TA1308000002\" ...\n $ start_lat         : num [1:190301] 41.9 41.8 42 41.8 41.8 ...\n $ start_lng         : num [1:190301] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:190301] 41.9 41.8 42 41.8 41.8 ...\n $ end_lng           : num [1:190301] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:190301] \"member\" \"member\" \"casual\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_02)\n\nspc_tbl_ [190,445 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:190445] \"CBCD0D7777F0E45F\" \"F3EC5FCE5FF39DE9\" \"E54C1F27FA9354FF\" \"3D561E04F739CC45\" ...\n $ rideable_type     : chr [1:190445] \"classic_bike\" \"electric_bike\" \"classic_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:190445], format: \"2023-02-14 11:59:42\" \"2023-02-15 13:53:48\" ...\n $ ended_at          : POSIXct[1:190445], format: \"2023-02-14 12:13:38\" \"2023-02-15 13:59:08\" ...\n $ start_station_name: chr [1:190445] \"Southport Ave & Clybourn Ave\" \"Clarendon Ave & Gordon Ter\" \"Southport Ave & Clybourn Ave\" \"Southport Ave & Clybourn Ave\" ...\n $ start_station_id  : chr [1:190445] \"TA1309000030\" \"13379\" \"TA1309000030\" \"TA1309000030\" ...\n $ end_station_name  : chr [1:190445] \"Clark St & Schiller St\" \"Sheridan Rd & Lawrence Ave\" \"Aberdeen St & Monroe St\" \"Franklin St & Adams St (Temp)\" ...\n $ end_station_id    : chr [1:190445] \"TA1309000024\" \"TA1309000041\" \"13156\" \"TA1309000008\" ...\n $ start_lat         : num [1:190445] 41.9 42 41.9 41.9 41.8 ...\n $ start_lng         : num [1:190445] -87.7 -87.6 -87.7 -87.7 -87.6 ...\n $ end_lat           : num [1:190445] 41.9 42 41.9 41.9 41.8 ...\n $ end_lng           : num [1:190445] -87.6 -87.7 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:190445] \"casual\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_03)\n\nspc_tbl_ [258,678 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:258678] \"6842AA605EE9FBB3\" \"F984267A75B99A8C\" \"FF7CF57CFE026D02\" \"6B61B916032CB6D6\" ...\n $ rideable_type     : chr [1:258678] \"electric_bike\" \"electric_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:258678], format: \"2023-03-16 08:20:34\" \"2023-03-04 14:07:06\" ...\n $ ended_at          : POSIXct[1:258678], format: \"2023-03-16 08:22:52\" \"2023-03-04 14:15:31\" ...\n $ start_station_name: chr [1:258678] \"Clark St & Armitage Ave\" \"Public Rack - Kedzie Ave & Argyle St\" \"Orleans St & Chestnut St (NEXT Apts)\" \"Desplaines St & Kinzie St\" ...\n $ start_station_id  : chr [1:258678] \"13146\" \"491\" \"620\" \"TA1306000003\" ...\n $ end_station_name  : chr [1:258678] \"Larrabee St & Webster Ave\" NA \"Clark St & Randolph St\" \"Sheffield Ave & Kingsbury St\" ...\n $ end_station_id    : chr [1:258678] \"13193\" NA \"TA1305000030\" \"13154\" ...\n $ start_lat         : num [1:258678] 41.9 42 41.9 41.9 41.9 ...\n $ start_lng         : num [1:258678] -87.6 -87.7 -87.6 -87.6 -87.7 ...\n $ end_lat           : num [1:258678] 41.9 42 41.9 41.9 41.9 ...\n $ end_lng           : num [1:258678] -87.6 -87.7 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:258678] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_04)\n\nspc_tbl_ [426,590 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:426590] \"8FE8F7D9C10E88C7\" \"34E4ED3ADF1D821B\" \"5296BF07A2F77CB5\" \"40759916B76D5D52\" ...\n $ rideable_type     : chr [1:426590] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:426590], format: \"2023-04-02 08:37:28\" \"2023-04-19 11:29:02\" ...\n $ ended_at          : POSIXct[1:426590], format: \"2023-04-02 08:41:37\" \"2023-04-19 11:52:12\" ...\n $ start_station_name: chr [1:426590] NA NA NA NA ...\n $ start_station_id  : chr [1:426590] NA NA NA NA ...\n $ end_station_name  : chr [1:426590] NA NA NA NA ...\n $ end_station_id    : chr [1:426590] NA NA NA NA ...\n $ start_lat         : num [1:426590] 41.8 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:426590] -87.6 -87.7 -87.7 -87.7 -87.7 ...\n $ end_lat           : num [1:426590] 41.8 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:426590] -87.6 -87.7 -87.7 -87.7 -87.6 ...\n $ member_casual     : chr [1:426590] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_05)\n\nspc_tbl_ [634,858 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:634858] \"EC2DE40644C6B0F4\" \"1C31AD03897EE385\" \"1542FBEC830415CF\" \"6FF59852924528F8\" ...\n $ rideable_type     : chr [1:634858] \"classic_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:634858], format: \"2022-05-23 23:06:58\" \"2022-05-11 08:53:28\" ...\n $ ended_at          : POSIXct[1:634858], format: \"2022-05-23 23:40:19\" \"2022-05-11 09:31:22\" ...\n $ start_station_name: chr [1:634858] \"Wabash Ave & Grand Ave\" \"DuSable Lake Shore Dr & Monroe St\" \"Clinton St & Madison St\" \"Clinton St & Madison St\" ...\n $ start_station_id  : chr [1:634858] \"TA1307000117\" \"13300\" \"TA1305000032\" \"TA1305000032\" ...\n $ end_station_name  : chr [1:634858] \"Halsted St & Roscoe St\" \"Field Blvd & South Water St\" \"Wood St & Milwaukee Ave\" \"Clark St & Randolph St\" ...\n $ end_station_id    : chr [1:634858] \"TA1309000025\" \"15534\" \"13221\" \"TA1305000030\" ...\n $ start_lat         : num [1:634858] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:634858] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:634858] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:634858] -87.6 -87.6 -87.7 -87.6 -87.7 ...\n $ member_casual     : chr [1:634858] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_06)\n\nspc_tbl_ [769,204 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:769204] \"600CFD130D0FD2A4\" \"F5E6B5C1682C6464\" \"B6EB6D27BAD771D2\" \"C9C320375DE1D5C6\" ...\n $ rideable_type     : chr [1:769204] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:769204], format: \"2022-06-30 17:27:53\" \"2022-06-30 18:39:52\" ...\n $ ended_at          : POSIXct[1:769204], format: \"2022-06-30 17:35:15\" \"2022-06-30 18:47:28\" ...\n $ start_station_name: chr [1:769204] NA NA NA NA ...\n $ start_station_id  : chr [1:769204] NA NA NA NA ...\n $ end_station_name  : chr [1:769204] NA NA NA NA ...\n $ end_station_id    : chr [1:769204] NA NA NA NA ...\n $ start_lat         : num [1:769204] 41.9 41.9 41.9 41.8 41.9 ...\n $ start_lng         : num [1:769204] -87.6 -87.6 -87.7 -87.7 -87.6 ...\n $ end_lat           : num [1:769204] 41.9 41.9 41.9 41.8 41.9 ...\n $ end_lng           : num [1:769204] -87.6 -87.6 -87.6 -87.7 -87.6 ...\n $ member_casual     : chr [1:769204] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_07)\n\nspc_tbl_ [823,488 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:823488] \"954144C2F67B1932\" \"292E027607D218B6\" \"57765852588AD6E0\" \"B5B6BE44314590E6\" ...\n $ rideable_type     : chr [1:823488] \"classic_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:823488], format: \"2022-07-05 08:12:47\" \"2022-07-26 12:53:38\" ...\n $ ended_at          : POSIXct[1:823488], format: \"2022-07-05 08:24:32\" \"2022-07-26 12:55:31\" ...\n $ start_station_name: chr [1:823488] \"Ashland Ave & Blackhawk St\" \"Buckingham Fountain (Temp)\" \"Buckingham Fountain (Temp)\" \"Buckingham Fountain (Temp)\" ...\n $ start_station_id  : chr [1:823488] \"13224\" \"15541\" \"15541\" \"15541\" ...\n $ end_station_name  : chr [1:823488] \"Kingsbury St & Kinzie St\" \"Michigan Ave & 8th St\" \"Michigan Ave & 8th St\" \"Woodlawn Ave & 55th St\" ...\n $ end_station_id    : chr [1:823488] \"KA1503000043\" \"623\" \"623\" \"TA1307000164\" ...\n $ start_lat         : num [1:823488] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:823488] -87.7 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:823488] 41.9 41.9 41.9 41.8 41.9 ...\n $ end_lng           : num [1:823488] -87.6 -87.6 -87.6 -87.6 -87.7 ...\n $ member_casual     : chr [1:823488] \"member\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_08)\n\nspc_tbl_ [785,932 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:785932] \"550CF7EFEAE0C618\" \"DAD198F405F9C5F5\" \"E6F2BC47B65CB7FD\" \"F597830181C2E13C\" ...\n $ rideable_type     : chr [1:785932] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:785932], format: \"2022-08-07 21:34:15\" \"2022-08-08 14:39:21\" ...\n $ ended_at          : POSIXct[1:785932], format: \"2022-08-07 21:41:46\" \"2022-08-08 14:53:23\" ...\n $ start_station_name: chr [1:785932] NA NA NA NA ...\n $ start_station_id  : chr [1:785932] NA NA NA NA ...\n $ end_station_name  : chr [1:785932] NA NA NA NA ...\n $ end_station_id    : chr [1:785932] NA NA NA NA ...\n $ start_lat         : num [1:785932] 41.9 41.9 42 41.9 41.9 ...\n $ start_lng         : num [1:785932] -87.7 -87.6 -87.7 -87.7 -87.7 ...\n $ end_lat           : num [1:785932] 41.9 41.9 42 42 41.8 ...\n $ end_lng           : num [1:785932] -87.7 -87.6 -87.7 -87.7 -87.7 ...\n $ member_casual     : chr [1:785932] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_09)\n\nspc_tbl_ [701,339 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:701339] \"5156990AC19CA285\" \"E12D4A16BF51C274\" \"A02B53CD7DB72DD7\" \"C82E05FEE872DF11\" ...\n $ rideable_type     : chr [1:701339] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:701339], format: \"2022-09-01 08:36:22\" \"2022-09-01 17:11:29\" ...\n $ ended_at          : POSIXct[1:701339], format: \"2022-09-01 08:39:05\" \"2022-09-01 17:14:45\" ...\n $ start_station_name: chr [1:701339] NA NA NA NA ...\n $ start_station_id  : chr [1:701339] NA NA NA NA ...\n $ end_station_name  : chr [1:701339] \"California Ave & Milwaukee Ave\" NA NA NA ...\n $ end_station_id    : chr [1:701339] \"13084\" NA NA NA ...\n $ start_lat         : num [1:701339] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:701339] -87.7 -87.6 -87.6 -87.7 -87.7 ...\n $ end_lat           : num [1:701339] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:701339] -87.7 -87.6 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:701339] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_10)\n\nspc_tbl_ [558,685 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:558685] \"A50255C1E17942AB\" \"DB692A70BD2DD4E3\" \"3C02727AAF60F873\" \"47E653FDC2D99236\" ...\n $ rideable_type     : chr [1:558685] \"classic_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:558685], format: \"2022-10-14 17:13:30\" \"2022-10-01 16:29:26\" ...\n $ ended_at          : POSIXct[1:558685], format: \"2022-10-14 17:19:39\" \"2022-10-01 16:49:06\" ...\n $ start_station_name: chr [1:558685] \"Noble St & Milwaukee Ave\" \"Damen Ave & Charleston St\" \"Hoyne Ave & Balmoral Ave\" \"Rush St & Cedar St\" ...\n $ start_station_id  : chr [1:558685] \"13290\" \"13288\" \"655\" \"KA1504000133\" ...\n $ end_station_name  : chr [1:558685] \"Larrabee St & Division St\" \"Damen Ave & Cullerton St\" \"Western Ave & Leland Ave\" \"Orleans St & Chestnut St (NEXT Apts)\" ...\n $ end_station_id    : chr [1:558685] \"KA1504000079\" \"13089\" \"TA1307000140\" \"620\" ...\n $ start_lat         : num [1:558685] 41.9 41.9 42 41.9 41.9 ...\n $ start_lng         : num [1:558685] -87.7 -87.7 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:558685] 41.9 41.9 42 41.9 41.9 ...\n $ end_lng           : num [1:558685] -87.6 -87.7 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:558685] \"member\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_11)\n\nspc_tbl_ [337,735 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:337735] \"BCC66FC6FAB27CC7\" \"772AB67E902C180F\" \"585EAD07FDEC0152\" \"91C4E7ED3C262FF9\" ...\n $ rideable_type     : chr [1:337735] \"electric_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:337735], format: \"2022-11-10 06:21:55\" \"2022-11-04 07:31:55\" ...\n $ ended_at          : POSIXct[1:337735], format: \"2022-11-10 06:31:27\" \"2022-11-04 07:46:25\" ...\n $ start_station_name: chr [1:337735] \"Canal St & Adams St\" \"Canal St & Adams St\" \"Indiana Ave & Roosevelt Rd\" \"Indiana Ave & Roosevelt Rd\" ...\n $ start_station_id  : chr [1:337735] \"13011\" \"13011\" \"SL-005\" \"SL-005\" ...\n $ end_station_name  : chr [1:337735] \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" ...\n $ end_station_id    : chr [1:337735] \"13016\" \"13016\" \"13016\" \"13016\" ...\n $ start_lat         : num [1:337735] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:337735] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:337735] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:337735] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ member_casual     : chr [1:337735] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_12)\n\nspc_tbl_ [181,806 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:181806] \"65DBD2F447EC51C2\" \"0C201AA7EA0EA1AD\" \"E0B148CCB358A49D\" \"54C5775D2B7C9188\" ...\n $ rideable_type     : chr [1:181806] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:181806], format: \"2022-12-05 10:47:18\" \"2022-12-18 06:42:33\" ...\n $ ended_at          : POSIXct[1:181806], format: \"2022-12-05 10:56:34\" \"2022-12-18 07:08:44\" ...\n $ start_station_name: chr [1:181806] \"Clifton Ave & Armitage Ave\" \"Broadway & Belmont Ave\" \"Sangamon St & Lake St\" \"Shields Ave & 31st St\" ...\n $ start_station_id  : chr [1:181806] \"TA1307000163\" \"13277\" \"TA1306000015\" \"KA1503000038\" ...\n $ end_station_name  : chr [1:181806] \"Sedgwick St & Webster Ave\" \"Sedgwick St & Webster Ave\" \"St. Clair St & Erie St\" \"Damen Ave & Madison St\" ...\n $ end_station_id    : chr [1:181806] \"13191\" \"13191\" \"13016\" \"13134\" ...\n $ start_lat         : num [1:181806] 41.9 41.9 41.9 41.8 41.9 ...\n $ start_lng         : num [1:181806] -87.7 -87.6 -87.7 -87.6 -87.7 ...\n $ end_lat           : num [1:181806] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:181806] -87.6 -87.6 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:181806] \"member\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n#-------------------------------------------\n# Merge all dataframes into one\n#-------------------------------------------\nall_trips &lt;- bind_rows(trip_01, trip_02, trip_03,\n                       trip_04, trip_05, trip_06,\n                       trip_07, trip_08, trip_09,\n                       trip_10, trip_11, trip_12,)\n\nglimpse(all_trips)\n\nRows: 5,859,061\nColumns: 13\n$ ride_id            &lt;chr&gt; \"F96D5A74A3E41399\", \"13CB7EB698CEDB88\", \"BD88A2E670…\n$ rideable_type      &lt;chr&gt; \"electric_bike\", \"classic_bike\", \"electric_bike\", \"…\n$ started_at         &lt;dttm&gt; 2023-01-21 20:05:42, 2023-01-10 15:37:36, 2023-01-…\n$ ended_at           &lt;dttm&gt; 2023-01-21 20:16:33, 2023-01-10 15:46:05, 2023-01-…\n$ start_station_name &lt;chr&gt; \"Lincoln Ave & Fullerton Ave\", \"Kimbark Ave & 53rd …\n$ start_station_id   &lt;chr&gt; \"TA1309000058\", \"TA1309000037\", \"RP-005\", \"TA130900…\n$ end_station_name   &lt;chr&gt; \"Hampden Ct & Diversey Ave\", \"Greenwood Ave & 47th …\n$ end_station_id     &lt;chr&gt; \"202480.0\", \"TA1308000002\", \"599\", \"TA1308000002\", …\n$ start_lat          &lt;dbl&gt; 41.92407, 41.79957, 42.00857, 41.79957, 41.79957, 4…\n$ start_lng          &lt;dbl&gt; -87.64628, -87.59475, -87.69048, -87.59475, -87.594…\n$ end_lat            &lt;dbl&gt; 41.93000, 41.80983, 42.03974, 41.80983, 41.80983, 4…\n$ end_lng            &lt;dbl&gt; -87.64000, -87.59938, -87.69941, -87.59938, -87.599…\n$ member_casual      &lt;chr&gt; \"member\", \"member\", \"casual\", \"member\", \"member\", \"…\n\n\n\n#---------------------------------------------------------------\n# Data inspection, clean-up and manipulation for analysis\n#---------------------------------------------------------------\nhead(all_trips)\n\n# A tibble: 6 × 13\n  ride_id          rideable_type started_at          ended_at           \n  &lt;chr&gt;            &lt;chr&gt;         &lt;dttm&gt;              &lt;dttm&gt;             \n1 F96D5A74A3E41399 electric_bike 2023-01-21 20:05:42 2023-01-21 20:16:33\n2 13CB7EB698CEDB88 classic_bike  2023-01-10 15:37:36 2023-01-10 15:46:05\n3 BD88A2E670661CE5 electric_bike 2023-01-02 07:51:57 2023-01-02 08:05:11\n4 C90792D034FED968 classic_bike  2023-01-22 10:52:58 2023-01-22 11:01:44\n5 3397017529188E8A classic_bike  2023-01-12 13:58:01 2023-01-12 14:13:20\n6 58E68156DAE3E311 electric_bike 2023-01-31 07:18:03 2023-01-31 07:21:16\n# ℹ 9 more variables: start_station_name &lt;chr&gt;, start_station_id &lt;chr&gt;,\n#   end_station_name &lt;chr&gt;, end_station_id &lt;chr&gt;, start_lat &lt;dbl&gt;,\n#   start_lng &lt;dbl&gt;, end_lat &lt;dbl&gt;, end_lng &lt;dbl&gt;, member_casual &lt;chr&gt;\n\ntail(all_trips)\n\n# A tibble: 6 × 13\n  ride_id          rideable_type started_at          ended_at           \n  &lt;chr&gt;            &lt;chr&gt;         &lt;dttm&gt;              &lt;dttm&gt;             \n1 7BDEDE9860418B53 classic_bike  2022-12-07 06:52:45 2022-12-07 06:56:36\n2 43ABEE85B6E15DCA classic_bike  2022-12-05 06:51:04 2022-12-05 06:54:48\n3 F041C89A3D1F0270 electric_bike 2022-12-14 17:06:28 2022-12-14 17:19:27\n4 A2BECB88430BE156 classic_bike  2022-12-08 16:27:47 2022-12-08 16:32:20\n5 37B392960E566F58 classic_bike  2022-12-28 09:37:38 2022-12-28 09:41:34\n6 2DD1587210BA45AE classic_bike  2022-12-09 00:27:25 2022-12-09 00:35:28\n# ℹ 9 more variables: start_station_name &lt;chr&gt;, start_station_id &lt;chr&gt;,\n#   end_station_name &lt;chr&gt;, end_station_id &lt;chr&gt;, start_lat &lt;dbl&gt;,\n#   start_lng &lt;dbl&gt;, end_lat &lt;dbl&gt;, end_lng &lt;dbl&gt;, member_casual &lt;chr&gt;\n\ncolnames(all_trips)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\nnrow(all_trips)\n\n[1] 5859061\n\ndim(all_trips)\n\n[1] 5859061      13\n\nsummary(all_trips)\n\n   ride_id          rideable_type        started_at                    \n Length:5859061     Length:5859061     Min.   :2022-05-01 00:00:06.00  \n Class :character   Class :character   1st Qu.:2022-07-03 11:12:30.00  \n Mode  :character   Mode  :character   Median :2022-08-28 12:44:57.00  \n                                       Mean   :2022-09-19 13:39:54.23  \n                                       3rd Qu.:2022-11-08 06:30:21.00  \n                                       Max.   :2023-04-30 23:59:05.00  \n                                                                       \n    ended_at                      start_station_name start_station_id  \n Min.   :2022-05-01 00:05:17.00   Length:5859061     Length:5859061    \n 1st Qu.:2022-07-03 11:38:52.00   Class :character   Class :character  \n Median :2022-08-28 13:07:09.00   Mode  :character   Mode  :character  \n Mean   :2022-09-19 13:58:50.35                                        \n 3rd Qu.:2022-11-08 06:43:39.00                                        \n Max.   :2023-05-03 10:37:12.00                                        \n                                                                       \n end_station_name   end_station_id       start_lat       start_lng     \n Length:5859061     Length:5859061     Min.   :41.64   Min.   :-87.84  \n Class :character   Class :character   1st Qu.:41.88   1st Qu.:-87.66  \n Mode  :character   Mode  :character   Median :41.90   Median :-87.64  \n                                       Mean   :41.90   Mean   :-87.65  \n                                       3rd Qu.:41.93   3rd Qu.:-87.63  \n                                       Max.   :42.07   Max.   :-87.52  \n                                                                       \n    end_lat         end_lng       member_casual     \n Min.   : 0.00   Min.   :-88.14   Length:5859061    \n 1st Qu.:41.88   1st Qu.:-87.66   Class :character  \n Median :41.90   Median :-87.64   Mode  :character  \n Mean   :41.90   Mean   :-87.65                     \n 3rd Qu.:41.93   3rd Qu.:-87.63                     \n Max.   :42.37   Max.   :  0.00                     \n NA's   :5973    NA's   :5973                       \n\n\nStep 3: Perform further data transformation for data consistency, and fix any issues prior to analysis.\n\n#-------------------------------------------\n# Address any data issues and fix them\n#-------------------------------------------\n\n# Check columns for aggregation level\ndfs_member_casual &lt;- table(all_trips$member_casual)\ndfs_rideable_type &lt;- table(all_trips$rideable_type)\ndfs_member_casual\n\n\n casual  member \n2358307 3500754 \n\ndfs_rideable_type\n\n\n classic_bike   docked_bike electric_bike \n      2642585        170518       3045958 \n\n# Add columns for ride date to increase aggregation level - month, day, year, day of the week\nall_trips &lt;- \n  all_trips |&gt; \n    mutate(\n      start_date = as.Date(started_at),\n      start_month = format(start_date, \"%m\"),\n      start_day = format(start_date, \"%d\"),\n      start_year = format(start_date, \"%Y\"),\n      start_weekday = format(start_date, \"%A\"),\n      .after = started_at\n    )\n\n# Add a column for ride length in seconds for analysis\nall_trips &lt;- \n  all_trips |&gt; \n    mutate(\n      ride_length = as.numeric(difftime(ended_at, started_at)),\n      .after = ended_at\n    )\n\nis.numeric(all_trips$ride_length)\n\n[1] TRUE\n\n# Check structure of the data frame\nstr(all_trips)\n\ntibble [5,859,061 × 19] (S3: tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:5859061] \"F96D5A74A3E41399\" \"13CB7EB698CEDB88\" \"BD88A2E670661CE5\" \"C90792D034FED968\" ...\n $ rideable_type     : chr [1:5859061] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:5859061], format: \"2023-01-21 20:05:42\" \"2023-01-10 15:37:36\" ...\n $ start_date        : Date[1:5859061], format: \"2023-01-21\" \"2023-01-10\" ...\n $ start_month       : chr [1:5859061] \"01\" \"01\" \"01\" \"01\" ...\n $ start_day         : chr [1:5859061] \"21\" \"10\" \"02\" \"22\" ...\n $ start_year        : chr [1:5859061] \"2023\" \"2023\" \"2023\" \"2023\" ...\n $ start_weekday     : chr [1:5859061] \"Saturday\" \"Tuesday\" \"Monday\" \"Sunday\" ...\n $ ended_at          : POSIXct[1:5859061], format: \"2023-01-21 20:16:33\" \"2023-01-10 15:46:05\" ...\n $ ride_length       : num [1:5859061] 651 509 794 526 919 193 840 561 747 753 ...\n $ start_station_name: chr [1:5859061] \"Lincoln Ave & Fullerton Ave\" \"Kimbark Ave & 53rd St\" \"Western Ave & Lunt Ave\" \"Kimbark Ave & 53rd St\" ...\n $ start_station_id  : chr [1:5859061] \"TA1309000058\" \"TA1309000037\" \"RP-005\" \"TA1309000037\" ...\n $ end_station_name  : chr [1:5859061] \"Hampden Ct & Diversey Ave\" \"Greenwood Ave & 47th St\" \"Valli Produce - Evanston Plaza\" \"Greenwood Ave & 47th St\" ...\n $ end_station_id    : chr [1:5859061] \"202480.0\" \"TA1308000002\" \"599\" \"TA1308000002\" ...\n $ start_lat         : num [1:5859061] 41.9 41.8 42 41.8 41.8 ...\n $ start_lng         : num [1:5859061] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:5859061] 41.9 41.8 42 41.8 41.8 ...\n $ end_lng           : num [1:5859061] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:5859061] \"member\" \"member\" \"casual\" \"member\" ...\n\n\nData exclusion - bad data\n\n#-------------------------------------------\n# Exclude data that are not suitable\n#-------------------------------------------\n\n# Remove data that has negative ride length\nall_trips_tidy &lt;- \n  all_trips |&gt; \n    filter(ride_length &gt; 0)\n\n\n\n\nStep 4: Conduct descriptive analysis\n\n# Descriptive analysis on ride_length (all figures in seconds)\n\nmean(all_trips_tidy$ride_length)\n\n[1] 1136.371\n\nmedian(all_trips_tidy$ride_length)\n\n[1] 599\n\nmin(all_trips_tidy$ride_length)\n\n[1] 1\n\nmax(all_trips_tidy$ride_length)\n\n[1] 2483235\n\nsummary(all_trips_tidy$ride_length)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      1     339     599    1136    1075 2483235 \n\n\n\n# Get insights of ride length info for member or casual riders\n\nall_trips_tidy |&gt; \n  group_by(member_casual) |&gt; \n  summarize(\n    mean_ride_length = as.integer(mean(ride_length)),\n    median_ride_length = median(ride_length),\n    min_ride_length = min(ride_length),\n    max_ride_length = max(ride_length)\n  )\n\n# A tibble: 2 × 5\n  member_casual mean_ride_length median_ride_length min_ride_length\n  &lt;chr&gt;                    &lt;int&gt;              &lt;dbl&gt;           &lt;dbl&gt;\n1 casual                    1709                751               1\n2 member                     750                520               1\n# ℹ 1 more variable: max_ride_length &lt;dbl&gt;\n\n\n\n# Average ride_length by each day of the week for members and casual riders\nall_trips_tidy |&gt; \n  group_by(member_casual, start_weekday) |&gt; \n  summarize(mean_ride_length = as.integer(mean(ride_length))) |&gt; \n  arrange(factor(start_weekday, levels = c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")), member_casual)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 14 × 3\n# Groups:   member_casual [2]\n   member_casual start_weekday mean_ride_length\n   &lt;chr&gt;         &lt;chr&gt;                    &lt;int&gt;\n 1 casual        Sunday                    2006\n 2 member        Sunday                     829\n 3 casual        Monday                    1702\n 4 member        Monday                     718\n 5 casual        Tuesday                   1520\n 6 member        Tuesday                    717\n 7 casual        Wednesday                 1450\n 8 member        Wednesday                  713\n 9 casual        Thursday                  1482\n10 member        Thursday                   726\n11 casual        Friday                    1651\n12 member        Friday                     741\n13 casual        Saturday                  1934\n14 member        Saturday                   835\n\n\n\n# Analyze ridership summary data by rider type and weekday\nall_trips_tidy |&gt; \n  mutate(weekday = wday(started_at, label = TRUE)) |&gt; \n  group_by(member_casual, weekday) |&gt; \n  summarise(\n    number_of_rides = n(),\n    average_duration = as.integer(mean(ride_length))\n  ) |&gt; \n  arrange(member_casual, weekday)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 14 × 4\n# Groups:   member_casual [2]\n   member_casual weekday number_of_rides average_duration\n   &lt;chr&gt;         &lt;ord&gt;             &lt;int&gt;            &lt;int&gt;\n 1 casual        Sun              388779             2006\n 2 casual        Mon              275726             1702\n 3 casual        Tue              272624             1520\n 4 casual        Wed              284556             1450\n 5 casual        Thu              318437             1482\n 6 casual        Fri              350053             1651\n 7 casual        Sat              467873             1934\n 8 member        Sun              402040              829\n 9 member        Mon              484532              718\n10 member        Tue              544350              717\n11 member        Wed              556882              713\n12 member        Thu              560837              726\n13 member        Fri              497434              741\n14 member        Sat              454394              835\n\n\nVisualization\n\n# Construct dataframe for visualization\n\ndf_ride_count &lt;- \n  all_trips_tidy |&gt; \n    mutate(weekday = wday(started_at, label = TRUE)) |&gt; \n    group_by(member_casual, weekday) |&gt; \n    summarise(\n      number_of_rides = n(),\n      average_duration = as.integer(mean(ride_length))\n    ) |&gt; \n    arrange(member_casual, weekday)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n\n# Visualize the number of rides by rider type\n\ndf_ride_count |&gt; \n  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +\n    geom_col(position = \"dodge\") +\n    labs(title = \"Ridership by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Number of rides\", fill = \"User type\")\n\n\n\n\n\n# Visualize the average ride duration by rider type\n\ndf_ride_count |&gt; \n  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +\n    geom_col(position = \"dodge\") +\n    labs(title = \"Average Ride Duration (sec.) by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Number of rides\", fill = \"User type\")\n\n\n\n\n\n# Visualize ride duration per weekday\n\nall_trips_tidy |&gt; \n  ggplot(aes(x = start_weekday, y = ride_length, color = member_casual)) +\n    geom_point() +\n    labs(title = \"Ride Duration (sec.) by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Ride duration\", fill = \"User type\")\n\n\n\n\n\n# Visualize rideable type by rider type\n\ndfs_rideable_type_member_casual &lt;- \n  all_trips_tidy |&gt; \n    group_by(member_casual, rideable_type) |&gt; \n    summarize(ride_count = n()) |&gt; \n    arrange(member_casual, ride_count)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n\ndfs_rideable_type_member_casual |&gt; \n  ggplot(aes(x = rideable_type, y = ride_count, fill = member_casual )) +\n    geom_bar(stat = \"identity\") +\n    geom_text(\n      aes(label = ride_count), \n      size = 4,\n      position = position_stack(vjust = 0.5),\n      colour = \"white\"\n    ) +\n    scale_y_continuous(labels = comma)\n\n\n\n\nGeographical mapping of ridership by rider type, using leaflet\n\n# Prepare your data in a smaller set for plotting\n\ndfs_ride_start_loc &lt;- \n  all_trips_tidy |&gt; \n    select(start_station_name, start_lat, start_lng, member_casual) |&gt; \n    group_by(start_station_name, start_lat, start_lng, member_casual) |&gt; \n    summarize(\n      ride_frequency = n()\n      ) |&gt; \n    filter(ride_frequency &gt;= 1200) # limit the ride_frequency &gt;= 1200\n\n`summarise()` has grouped output by 'start_station_name', 'start_lat',\n'start_lng'. You can override using the `.groups` argument.\n\n\n\n# Create a leaflet map centered on Chicago with map view\n# Display both member and casual ridership information\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 12) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~ifelse(member_casual == \"member\", \"blue\", \"red\"),\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\n\n# Create a leaflet map centered on Chicago with map view\n# Display casual ridership information only\n\ndfs_ride_start_loc_casual &lt;- \n  dfs_ride_start_loc |&gt; \n    filter(member_casual == \"casual\")\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 12) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc_casual,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~\"red\",\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\nQuestion: What stations are most frequently used by casual riders in the past 12 months?\n\n# Retrieve frequent station information used by casual riders in the past 12 months\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\ndfs_ride_start_loc_casual &lt;- \n  all_trips_tidy |&gt; \n    filter(member_casual == \"casual\") |&gt; \n    group_by(start_station_id, start_station_name, member_casual) |&gt; \n    summarize(\n      ride_frequency = n(),\n      # need to set \"drop\" option to assign ranking properly later\n      .groups = \"drop\" \n      )\n\ndfs_ride_start_loc_casual &lt;- \n  dfs_ride_start_loc_casual |&gt; \n    arrange(desc(ride_frequency)) |&gt; \n    mutate(rank = rank(-ride_frequency, ties.method = 'min')) |&gt; \n    select(rank, start_station_id, start_station_name, ride_frequency)\n\ndfs_ride_start_loc_casual_ranked &lt;- \n  dfs_ride_start_loc_casual |&gt; \n    rename(\n      \"rank\" = \"rank\", \n      \"station_id\" = \"start_station_id\",\n      \"station_name\" = \"start_station_name\",\n      \"ride_count\" = \"ride_frequency\"\n    )\n\n# Replace NA in station_id and station_name with \"*Unknown*\"\ndfs_ride_start_loc_casual_ranked &lt;- \n  dfs_ride_start_loc_casual_ranked |&gt; \n    mutate_at(c('station_id','station_name'), ~replace_na(.,\"*Unknown*\"))\n  \n# List top 20 stations\ndfs_ride_start_loc_casual_ranked_20 &lt;- dfs_ride_start_loc_casual_ranked[1:20,]\n\n# Create a styled table\nstyled_table &lt;- kable(dfs_ride_start_loc_casual_ranked_20, format = \"html\", align = \"c\")  |&gt; \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\nstyled_table\n\n\n\n\nrank\nstation_id\nstation_name\nride_count\n\n\n\n\n1\n*Unknown*\n*Unknown*\n346314\n\n\n2\n13022\nStreeter Dr & Grand Ave\n57427\n\n\n3\n13300\nDuSable Lake Shore Dr & Monroe St\n32037\n\n\n4\n13042\nMichigan Ave & Oak St\n25380\n\n\n5\n13008\nMillennium Park\n25279\n\n\n6\nLF-005\nDuSable Lake Shore Dr & North Blvd\n23705\n\n\n7\n15544\nShedd Aquarium\n20424\n\n\n8\nTA1308000001\nTheater on the Lake\n18482\n\n\n9\nTA1308000050\nWells St & Concord Ln\n16482\n\n\n10\nKA1503000064\nDusable Harbor\n14260\n\n\n11\nSL-005\nIndiana Ave & Roosevelt Rd\n13885\n\n\n12\n13146\nClark St & Armitage Ave\n13759\n\n\n13\n13179\nClark St & Lincoln Ave\n13263\n\n\n14\nTA1307000039\nClark St & Elm St\n13085\n\n\n15\nTA1308000012\nMontrose Harbor\n12834\n\n\n16\n13137\nBroadway & Barry Ave\n12482\n\n\n17\nKA1504000135\nWells St & Elm St\n12459\n\n\n18\n632\nClark St & Newport St\n12409\n\n\n19\nTA1307000134\nWilton Ave & Belmont Ave\n11912\n\n\n20\nTA1307000117\nWabash Ave & Grand Ave\n11677\n\n\n\n\n\n\n\nExport the summary data that can be used in other tools - SQL, Spreadsheet, Power BI, Tableau\n\nwrite.csv(df_ride_count, file = \"../data/summary_df_ride_count.csv\")"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects & Case studies",
    "section": "",
    "text": "Explore my recent data analysis projects and case studies, where I extract meaningful insights from various datasets. I uncover valuable patterns, trends, and correlations for informed decision-making.\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nCase study - Cyclistic Bike-Share Analysis\n\n\nGoogle Data Analytics Professional Certificate capstone project\n\n\n\n\n\n\nFebruary 5, 2023\n\n\nAlbert Joonyoung Park\n\n\n11 min\n\n\n\n\n\n\nNo matching items"
  }
]