[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Albert Joon Park",
    "section": "",
    "text": "Albert Joonyoung Park is an aspiring and dedicated independent data analyst with a diverse background spanning entrepreneurship, eCommerce, manufacturing operations, and database application development. With a strong focus on delivering valuable insights, he collaborates closely with clients to extract meaningful information from diverse datasets across various industries. Additionally, Albert has recently ventured into mortgage brokering, aiming to leverage his data skills to assist individuals in identifying optimal financial solutions tailored to their specific needs. Beyond his professional pursuits, Albert finds joy in spending quality time with his spouse, continuously expanding his expertise in data science, actively participating in the church choir, and honing his piano-playing skills."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog Posts",
    "section": "",
    "text": "A Test Blog Post\n\n\nThe first blog post using Quarto.\n\n\n\n\n\n\nJune 1, 2022\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Greetings from Albert J. Park",
    "section": "",
    "text": "Hello, I’m Albert Joonyoung Park.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "posts/my-first-blog.html",
    "href": "posts/my-first-blog.html",
    "title": "A Test Blog Post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/my-first-blog.html#merriweather",
    "href": "posts/my-first-blog.html#merriweather",
    "title": "A Test Blog Post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "posts/my-first-blog.html#columns",
    "href": "posts/my-first-blog.html#columns",
    "title": "A Test Blog Post",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "posts/my-first-blog.html#margin-captions",
    "href": "posts/my-first-blog.html#margin-captions",
    "title": "A Test Blog Post",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "projects/cyclistic-bike-share-analysis.html",
    "href": "projects/cyclistic-bike-share-analysis.html",
    "title": "The Cyclistic Bike-share Analysis Case Study",
    "section": "",
    "text": "Case Study 1\n\n\nHow Does a Bike-Share Navigate Speedy Success?\n\n\nIntroduction\nThis document has been produced as a case study capstone project for Google Data Analytics Professional Certificate.In this case study, I performed many real-world tasks of a junior data analyst. I work for a fictional company, Cyclistic, and meet different characters and team members. In order to answer the key business questions, the project followed the steps of the data analysis process: ask, prepare, process, analyze, share, and act.\n\n\nScenario\nCyclistic is a fictional bike-share company based in Chicago, dedicated to optimizing its future success by maximizing the number of annual memberships. As the director of marketing, you recognize the importance of understanding the distinct usage patterns between casual riders and annual members in order to develop an effective marketing strategy. The goal is to convert casual riders into loyal annual members, ultimately driving the company’s growth.\n\n\nCharacters and teams\n\nCyclistic: A bike-share program that features more than 5,800 bicycles and 600 docking stations. Cyclistic sets itself apart by also offering reclining bikes, hand tricycles, and cargo bikes, making bike-share more inclusive to people with disabilities and riders who can’t use a standard two-wheeled bike. The majority of riders opt for traditional bikes; about 8% of riders use the assistive options. Cyclistic users are more likely to ride for leisure, but about 30% use them to commute to work each day.\nLily Moreno: The director of marketing and your manager. Moreno is responsible for the development of campaigns and initiatives to promote the bike-share program. These may include email, social media, and other channels.\nCyclistic marketing analytics team: A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy. You joined this team six months ago and have been busy learning about Cyclistic’s mission and business goals — as well as how you, as a junior data analyst, can help Cyclistic achieve them.\nCyclistic executive team: The notoriously detail-oriented executive team will decide whether to approve the recommended marketing program.\n\n\n\nAbout the company\nIn 2016, Cyclistic launched a successful bike-share offering. Since then, the program has grown to a fleet of 5,824 bicycles that are geotracked and locked into a network of 692 stations across Chicago. The bikes can be unlocked from one station and returned to any other station in the system anytime.\nUntil now, Cyclistic’s marketing strategy relied on building general awareness and appealing to broad consumer segments. One approach that helped make these things possible was the flexibility of its pricing plans: single-ride passes, full-day passes, and annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers who purchase annual memberships are Cyclistic members.\nCyclistic’s finance analysts have concluded that annual members are much more profitable than casual riders. Although the pricing flexibility helps Cyclistic attract more customers, Moreno believes that maximizing the number of annual members will be key to future growth. Rather than creating a marketing campaign that targets all-new customers, Moreno believes there is a very good chance to convert casual riders into members. She notes that casual riders are already aware of the Cyclistic program and have chosen Cyclistic for their mobility needs.\nMoreno has set a clear goal: Design marketing strategies aimed at converting casual riders into annual members. In order to do that, however, the marketing analyst team needs to better understand how annual members and casual riders differ, why casual riders would buy a membership, and how digital media could affect their marketing tactics. Moreno and her team are interested in analyzing the Cyclistic historical bike trip data to identify trends.\n\n\nProject deliverables\nProduce a report with the following deliverables:\n\n\nA clear statement of the business task.\nA description of all data sources used.\nDocumentation of any cleaning or manipulation of data.\nA summary of your analysis.\nSupporting visualizations and key findings.\nYour top three recommendations based on your analysis.\n\n\n\n\nAsk\nKey tasks:\n1. Identify the business task\n  The business objective is to convert occasional riders into annual members, which is crucial for driving   the company’s future growth. The primary purpose of this analysis is to identify trends and differences   in riding behavior between casual riders and annual members. The insights derived from this analysis   will serve as a foundation for informing the company’s marketing strategies and efforts aimed at   converting casual riders into loyal annual members.\n2. Key stakeholders:\n  Cyclistic executive team, Director of Marketing (Lily Moreno), Marketing Analytics team\nStatement of the business task\nUnderstand how Cyclistic casual riders and annual members ride differ by analyzing the Cyclistic historical bike trip data to identify trends.\n\n\nPrepare\nKey tasks:\n1. Download data and store it appropriately.\nThe previous 12 months of Cyclistic trip data is available for download here. They are made available by Motivate International Inc., under license. 12 CSV files have been downloaded and saved in the folder C:\\Users\\Joon\\git\\albert-joonyoung-park.github.io\\data.\n2. Identify how it’s organized\nThe data files are in csv format, and organized into individual month for the past 12 month period.\n3. Sort and filter the data.\nSpreadsheet was used to perform for initial inspection on some data files, and found some issues that require data cleaning and transformation.\n\nManyu columns contain some missing values - started_at, ended_at, start_station_name, end_station_name, end_station_id, start_lat, end_lat\nride_id column contains inconsistent data types, mixture of character and number type data.\nWhen “ride length was calculated based on” based on started_at, ended_at, some results showed unrealistic large or small numbers, exceeding over 24 hour, 0 or a few minutes of trips.\nAll files have the same column names and same number of columns.\nEach data file contains large amount of rows ranging 180,000 - 800,000+ rows.\n\n4. Determine the credibility of the data.\nROCCC measurement was applied to check the credibility of the data.\n\nReliable (R): The collection of dataset provide the full 12-month bike trip data. It is partial or biased.\nOriginal (O): The dataset is first party and public data, directly supplied by the the company - Cyclistic.\nComprehensive (C): The dataset contains enough information to answer the business task in question.\nCurrent (C): The dataset is current, proviing the current full-year bike trip data.\nCited (C): The dataset is made available as public data by the company and municipality, and is clearly cited online with license information.\n\nA description of all data sources used\n12 bike trip csv data files for the period from May 2022 to April 2023 were used as data source. The data source was available as first party public data by the company Motivate International Inc. The original files are named below.\n\n\n\nFile name\n\n\n\n\n202205-divvy-tripdata.csv\n\n\n202206-divvy-tripdata.csv\n\n\n202207-divvy-tripdata.csv\n\n\n202208-divvy-tripdata.csv\n\n\n202209-divvy-publictripdata.csv\n\n\n202210-divvy-tripdata.csv\n\n\n202211-divvy-tripdata.csv\n\n\n202212-divvy-tripdata.csv\n\n\n202301-divvy-tripdata.csv\n\n\n202302-divvy-tripdata.csv\n\n\n202303-divvy-tripdata.csv\n\n\n202304-divvy-tripdata.csv\n\n\n\n\n\nProcess\nKey tasks\n1. Check the data for errors.\n2. Choose your tools.\n3. Transform the data so you can work with it effectively.\n4. Document the cleaning process.\nDeliverable\nR was chosen for data inspection, cleaning and manipulation. The following code blocks are steps of data cleaning and manipulations for future analysis.\n\n# Set up working directory\nsetwd(\"C:/Users/Joon/git/albert-joonyoung-park.github.io/projects\")\n\n# Load required libraries to use\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(skimr)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(scales)\nlibrary(leaflet)\nlibrary(kableExtra)\n\n\n# List all the CSV data file names to be imported.\nfile_names &lt;- list.files(path = \"../data/\",\n                         pattern = \"*.csv\", full.names = FALSE,\n                         recursive = FALSE)\n# file_names\n\n# Import csv data files one at time and clean, transform the data\ntotal_num_rows &lt;- 0\ntotal_num_rows_dropped &lt;- 0\ntotal_num_rows_duplicated &lt;- 0\n\nfor (name in file_names) {\n  \n  # Import a csv file\n  data &lt;- read_csv(paste(\"../data/\", name, sep = \"\"))\n  num_rows &lt;- nrow(data)\n  #print(paste(num_rows, \"rows imported from\", name)) # number of rows imported\n  total_num_rows &lt;- total_num_rows + num_rows\n  \n  # Cleaning - drop rows with missing values - NA\n  data_na_dropped &lt;- drop_na(data)\n  num_rows_dropped &lt;- num_rows - nrow(data_na_dropped)\n  #print(paste(num_rows_dropped,\"rows with missing value dropped from\",name))\n  total_num_rows_dropped &lt;- total_num_rows_dropped + num_rows_dropped\n  \n  # Cleaning - remove duplicates\n  data_unique_na_dropped &lt;- distinct(data_na_dropped)\n  num_rows_duplicated &lt;- nrow(data_unique_na_dropped) - nrow(data_na_dropped)\n  total_num_rows_duplicated &lt;- total_num_rows_duplicated + num_rows_duplicated\n  \n  # Transformation:\n  # add columns to increase aggregation levels for analysis.\n  # lmit ride_length values\n  trip_month_data_clean &lt;- \n    data_unique_na_dropped |&gt; \n      mutate(\n        start_date = as.Date(started_at),\n        start_hour = format(started_at, \"%H\"),\n        start_month = format(start_date, \"%m\"),\n        start_day = format(start_date, \"%d\"),\n        start_year = format(start_date, \"%Y\"),\n        #start_weekday = format(start_date, \"%A\"),\n        start_weekday = wday(start_date, week_start = 7),\n        ride_length = difftime(ended_at, started_at, units = \"secs\"),\n        .after = started_at\n      ) |&gt; \n      filter(ride_length &gt; 0 & ride_length &lt;= 3600) # limit ride_length\n\n  # Save cleaned data files as a CSV file\n  write_csv(trip_month_data_clean, \n            paste(\"../data/cleaned_datasets/\", name, sep = \"\"))\n}\n\n# print some row number changes and structure of cleaned data being saved\ntotal_num_rows # 5859061 rows\n\n[1] 5859061\n\ntotal_num_rows_dropped # 1325062 rows\n\n[1] 1325062\n\ntotal_num_rows_duplicated # 0 row\n\n[1] 0\n\nglimpse(trip_month_data_clean)\n\nRows: 315,757\nColumns: 20\n$ ride_id            &lt;chr&gt; \"5B6500E1E58655C0\", \"AA65D25D69AF771F\", \"079FB2C196…\n$ rideable_type      &lt;chr&gt; \"classic_bike\", \"classic_bike\", \"electric_bike\", \"c…\n$ started_at         &lt;dttm&gt; 2023-04-10 17:34:35, 2023-04-12 12:29:46, 2023-04-…\n$ start_date         &lt;date&gt; 2023-04-10, 2023-04-12, 2023-04-13, 2023-04-29, 20…\n$ start_hour         &lt;chr&gt; \"17\", \"12\", \"17\", \"20\", \"17\", \"22\", \"21\", \"11\", \"11…\n$ start_month        &lt;chr&gt; \"04\", \"04\", \"04\", \"04\", \"04\", \"04\", \"04\", \"04\", \"04…\n$ start_day          &lt;chr&gt; \"10\", \"12\", \"13\", \"29\", \"20\", \"14\", \"07\", \"05\", \"05…\n$ start_year         &lt;chr&gt; \"2023\", \"2023\", \"2023\", \"2023\", \"2023\", \"2023\", \"20…\n$ start_weekday      &lt;dbl&gt; 2, 4, 5, 7, 5, 6, 6, 4, 4, 2, 7, 3, 1, 4, 3, 1, 2, …\n$ ride_length        &lt;drtn&gt; 1681 secs, 1454 secs, 94 secs, 3 secs, 1307 secs, …\n$ ended_at           &lt;dttm&gt; 2023-04-10 18:02:36, 2023-04-12 12:54:00, 2023-04-…\n$ start_station_name &lt;chr&gt; \"Avenue O & 134th St\", \"Cottage Grove Ave & 51st St…\n$ start_station_id   &lt;chr&gt; \"20214\", \"TA1309000067\", \"TA1306000002\", \"TA1309000…\n$ end_station_name   &lt;chr&gt; \"Avenue O & 134th St\", \"Cottage Grove Ave & 51st St…\n$ end_station_id     &lt;chr&gt; \"20214\", \"TA1309000067\", \"TA1306000002\", \"TA1309000…\n$ start_lat          &lt;dbl&gt; 41.65187, 41.80304, 41.86243, 41.80304, 41.90303, 4…\n$ start_lng          &lt;dbl&gt; -87.53967, -87.60662, -87.65115, -87.60662, -87.697…\n$ end_lat            &lt;dbl&gt; 41.65187, 41.80304, 41.86238, 41.80304, 41.92269, 4…\n$ end_lng            &lt;dbl&gt; -87.53967, -87.60662, -87.65106, -87.60662, -87.697…\n$ member_casual      &lt;chr&gt; \"member\", \"member\", \"member\", \"member\", \"casual\", \"…\n\n\n\n\nAnalyze\nKey tasks\n1. Aggregate your data so it’s useful and accessible.\n2. Organize and format your data.\n3. Perform calculations.\n4. Identify trends and relationships.\nDeliverable\nA summary of your analysis\n\n#----------------------------------------------------------------------------\n# Aggregate the cleaned dataset into a single data frame and inspect further\n#----------------------------------------------------------------------------\n\n# Get all the cleaned data file names for aggregation\nfile_names &lt;- list.files(path = \"../data/cleaned_datasets/\",\n                         pattern = \"*.csv\", full.names = FALSE,\n                         recursive = FALSE)\n\n# Import the first monthly cleaned csv file, so it constructs the data frame\n# for full year aggregation\nfull_year_trips &lt;- read_csv(paste(\"../data/cleaned_datasets/\", file_names[1], sep = \"\"))\n\n# Aggregate the remainig csv files, starting from the second\nfor(name in file_names[2:length(file_names)]) {\n  # Read csv file\n  trip_month_data_clean &lt;- read_csv(paste(\"../data/cleaned_datasets/\", \n                                          name, sep = \"\"))\n  \n  # Aggregate the monthly data\n  full_year_trips &lt;- rbind(full_year_trips, trip_month_data_clean)\n  \n  # Drop duplicates\n  full_year_trips &lt;- drop_na(full_year_trips)\n  \n  # Save monthly trip data into a aggregated csv file\n  write_csv(trip_month_data_clean, \"../data/analyzed_datasets/full_year_trips.csv\",\n            append = TRUE)\n}\n\n# Check the overview of the aggregated dataset\n# skim(full_year_trips) # 4393697\n\n\n#----------------------------------------------------------------------------\n# Analyze the aggregated data and create summary to find trends\n# Use quesstion, data summary, visualization format\n# Save each summary\n#----------------------------------------------------------------------------\n\n# !. Basic descriptive ananlysis on ride length per member and casual groups.\n\nride_length_membership &lt;- \nfull_year_trips |&gt; \n  group_by(membership = member_casual) |&gt; \n  summarize(\n    mean = round(mean(ride_length / 60)),\n    median = round(median(ride_length / 60)),\n    max = round(max(ride_length / 60)),\n    min = round(min(ride_length / 60))\n  )\n\np &lt;- \nride_length_membership |&gt; \n    pivot_longer(cols = c(mean, median, max, min),\n               names_to = \"statistic\",\n               values_to = \"ride_length\") |&gt; \n    ggplot(aes(x = statistic, y = ride_length, fill = membership)) + \n    geom_col(position = \"dodge2\") +\n    geom_label(\n      aes(label = ride_length),\n      size = 4,\n      color = \"white\",\n      position = position_dodge(width = 0.9), vjust = 0.2\n    ) +\n    labs(title = \"Ride length stats. by membership\", size = 14) +\n    labs(x = \"Basic statistic\", y = \"Ride length (mins.)\", fill = \"Membership\") \n\np &lt;- p + ylim(min(ride_length_membership$min), max(ride_length_membership$max) + 10)\n\n\n# Save the summary data\nwrite_csv(ride_length_membership, \n          \"../data/analyzed_datasets/ride_length_membership.csv\")\n\n# Save the plot\nplot_name &lt;- deparse(substitute(ride_length_membership))\nggsave(paste(\"../data/analyzed_datasets/\", plot_name, \".png\"), p, width = 6, height = 4, dpi = 300)\np\n\n\n\n\n\n# 2. Average ride length of day of week per casual and member group\nride_length_weekday_avg &lt;- \n  full_year_trips |&gt; \n    group_by(start_weekday, member_casual) |&gt; \n    summarize(avg_ride_length = round(mean(ride_length) / 60)) |&gt; \n    arrange(start_weekday) |&gt;\n    mutate(start_weekday = recode(start_weekday, \n                                  \"1\" = \"Sunday\", \n                                  \"2\" = \"Monday\", \n                                  \"3\" = \"Tuesday\", \n                                  \"4\" = \"Wednesday\", \n                                  \"5\" = \"Thursday\", \n                                  \"6\" = \"Friday\", \n                                  \"7\" = \"Saturday\"))\nride_length_weekday_avg\n\n# A tibble: 14 × 3\n# Groups:   start_weekday [7]\n   start_weekday member_casual avg_ride_length\n   &lt;chr&gt;         &lt;chr&gt;                   &lt;dbl&gt;\n 1 Sunday        casual                     18\n 2 Sunday        member                     13\n 3 Monday        casual                     16\n 4 Monday        member                     11\n 5 Tuesday       casual                     15\n 6 Tuesday       member                     11\n 7 Wednesday     casual                     15\n 8 Wednesday     member                     11\n 9 Thursday      casual                     15\n10 Thursday      member                     11\n11 Friday        casual                     16\n12 Friday        member                     11\n13 Saturday      casual                     18\n14 Saturday      member                     13\n\np &lt;- \nride_length_weekday_avg |&gt; \nggplot() +\n  geom_col(\n    aes(x = factor(start_weekday, levels=c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")), \n        y = avg_ride_length, \n        fill = member_casual),\n    position = \"dodge\"\n  ) +\n  labs(title = \"Average ride length by weekday\", size = 14) +\n  labs(x = \"Weekday\", y = \"Ride length (mins.)\", fill = \"Membership\")\n\n\n# Save the summary data\nwrite_csv(ride_length_weekday_avg, \n          \"../data/analyzed_datasets/ride_length_weekday_avg.csv\")\n\n# Save the plot\nplot_name &lt;- deparse(substitute(ride_length_weekday_avg))\nggsave(paste(\"../data/analyzed_datasets/\", plot_name, \".png\"), p, width = 6, height = 4, dpi = 300)\np\n\n\n\n\n\n# 3. Ride count for day of week per member vs casual group.\n\nride_count_weekday &lt;- \n  full_year_trips |&gt; \n    mutate(weekday = wday(started_at, label = TRUE)) |&gt; \n    group_by(member_casual, weekday) |&gt; \n    summarise(\n      number_of_rides = n(),\n      avg_ride_length = as.integer(mean(ride_length)/60)\n    ) |&gt; \n    arrange(member_casual, weekday)\n\nride_count_weekday\n\n# A tibble: 14 × 4\n# Groups:   member_casual [2]\n   member_casual weekday number_of_rides avg_ride_length\n   &lt;chr&gt;         &lt;ord&gt;             &lt;int&gt;           &lt;int&gt;\n 1 casual        Sun              274808              17\n 2 casual        Mon              194524              16\n 3 casual        Tue              192448              14\n 4 casual        Wed              201808              14\n 5 casual        Thu              225061              14\n 6 casual        Fri              245557              15\n 7 casual        Sat              332954              17\n 8 member        Sun              307754              12\n 9 member        Mon              383896              11\n10 member        Tue              431802              11\n11 member        Wed              438440              11\n12 member        Thu              437776              11\n13 member        Fri              383060              11\n14 member        Sat              343809              12\n\n# Visualize the number of rides by rider type\n\np &lt;- \nride_count_weekday |&gt; \n  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +\n    geom_col(position = \"dodge\") +\n    labs(title = \"Ridership by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Number of rides\", fill = \"User type\") +\n    scale_y_continuous(labels = comma)\n\n# Save the summary data\nwrite_csv(ride_count_weekday, \n          \"../data/analyzed_datasets/ride_count_weekday.csv\")\n\n# Save the plot\nplot_name &lt;- deparse(substitute(ride_count_weekday))\nggsave(paste(\"../data/analyzed_datasets/\", plot_name, \".png\"), p, width = 6, height = 4, dpi = 300)\np\n\n\n\n\n\n# 4. Rideable type frequencies for day of week per member vs casual group.\n\ndfs_rideable_type_member_casual &lt;- \n  full_year_trips |&gt; \n    group_by(member_casual, rideable_type) |&gt; \n    summarize(ride_count = n()) |&gt; \n    arrange(rideable_type, member_casual, ride_count)\n\ndfs_rideable_type_member_casual\n\n# A tibble: 5 × 3\n# Groups:   member_casual [2]\n  member_casual rideable_type ride_count\n  &lt;chr&gt;         &lt;chr&gt;              &lt;int&gt;\n1 casual        classic_bike      824392\n2 member        classic_bike     1739554\n3 casual        docked_bike       131036\n4 casual        electric_bike     711732\n5 member        electric_bike     986983\n\np &lt;- \ndfs_rideable_type_member_casual |&gt; \n  ggplot(aes(x = rideable_type, y = ride_count, fill = member_casual )) +\n    geom_bar(stat = \"identity\") +\n    geom_text(\n      aes(label = comma(ride_count)),\n      size = 3.5,\n      position = position_stack(vjust = 0.5),\n      colour = \"white\"\n    ) +\n    scale_y_continuous(labels = comma) +\n    labs(title = \"Ride frequency by rideable type\", size = 16) +\n    labs(subtitle = \"Period: 12 months (May 2022 - April 2023)\") +\n    labs(x = \"Rideable type\", y = \"Frequency\", fill = \"Membership\")\n\n# Save the summary data\nwrite_csv(dfs_rideable_type_member_casual, \n          \"../data/analyzed_datasets/dfs_rideable_type_member_casual.csv\")\n\n# Save the plot\nplot_name &lt;- deparse(substitute(ride_count_weekday))\nggsave(paste(\"../data/analyzed_datasets/\", plot_name, \".png\"), p, width = 6, height = 4, dpi = 300)\np\n\n\n\n\n\n# 5. Display a map marking the start staion that are frequently used by member or casual riders.\n\n# Geographical mapping of ridership by membership, using leaflet\n# Prepare data in a smaller set for plotting - limit to ride frequency over 1200\n\ndfs_ride_start_loc &lt;- \n  full_year_trips |&gt; \n    select(start_station_name, start_lat, start_lng, member_casual) |&gt; \n    group_by(start_station_name, start_lat, start_lng, member_casual) |&gt; \n    summarize(\n      ride_frequency = n()\n      ) |&gt; \n    filter(ride_frequency &gt;= 1200) # limit the ride_frequency &gt;= 1200\n\ndfs_ride_start_loc\n\n# A tibble: 614 × 5\n# Groups:   start_station_name, start_lat, start_lng [377]\n   start_station_name         start_lat start_lng member_casual ride_frequency\n   &lt;chr&gt;                          &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;                  &lt;int&gt;\n 1 900 W Harrison St               41.9     -87.6 casual                  1728\n 2 900 W Harrison St               41.9     -87.6 member                  5506\n 3 Aberdeen St & Jackson Blvd      41.9     -87.7 casual                  1520\n 4 Aberdeen St & Jackson Blvd      41.9     -87.7 member                  5750\n 5 Aberdeen St & Monroe St         41.9     -87.7 casual                  1581\n 6 Aberdeen St & Monroe St         41.9     -87.7 member                  4349\n 7 Aberdeen St & Randolph St       41.9     -87.7 casual                  1822\n 8 Aberdeen St & Randolph St       41.9     -87.7 member                  3850\n 9 Ada St & Washington Blvd        41.9     -87.7 casual                  1322\n10 Ada St & Washington Blvd        41.9     -87.7 member                  3010\n# ℹ 604 more rows\n\n# Create a leaflet map centered on Chicago with map view\n# Display both member and casual ridership information\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 13) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~ifelse(member_casual == \"member\", \"blue\", \"red\"),\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\n\n# Create a leaflet map centered on Chicago with map view\n# Display Casual riders information only\n\ndfs_ride_start_loc_casual &lt;- \n  dfs_ride_start_loc |&gt; \n    filter(member_casual == \"casual\")\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 13) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc_casual,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~\"red\",\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\n\n# Create a leaflet map centered on Chicago with map view\n# Display Member ridership information only\n\ndfs_ride_start_loc_member &lt;- \n  dfs_ride_start_loc |&gt; \n    filter(member_casual == \"member\")\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 13) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc_member,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~\"blue\",\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\n\n# 6. What stations are most frequently used by casual riders in the past 12 months?\n\n# Retrieve frequent station information used by casual riders in the past 12 months\ndfs_ride_start_loc_casual &lt;- \n  full_year_trips |&gt; \n    filter(member_casual == \"casual\") |&gt; \n    group_by(start_station_id, start_station_name, member_casual) |&gt; \n    summarize(\n      ride_frequency = n(),\n      .groups = \"drop\" # need to set \"drop\" option to assign ranking properly later\n      )\n\ndfs_ride_start_loc_casual &lt;- \n  dfs_ride_start_loc_casual |&gt; \n    arrange(desc(ride_frequency)) |&gt; \n    mutate(rank = rank(-ride_frequency, ties.method = 'min')) |&gt; \n    select(rank, start_station_id, start_station_name, ride_frequency)\n\ndfs_ride_start_loc_casual_ranked &lt;- \n  dfs_ride_start_loc_casual |&gt; \n    rename(\n      \"rank\" = \"rank\", \n      \"station_id\" = \"start_station_id\",\n      \"station_name\" = \"start_station_name\",\n      \"ride_count\" = \"ride_frequency\"\n    )\n\n# List top 20 stations\n\ndfs_ride_start_loc_casual_ranked_20 &lt;- dfs_ride_start_loc_casual_ranked[1:20,]\n\n# Set ordering\ndfs_ride_start_loc_casual_ranked_20$station_name &lt;- factor(dfs_ride_start_loc_casual_ranked_20$station_name, levels = dfs_ride_start_loc_casual_ranked_20$station_name[order(dfs_ride_start_loc_casual_ranked_20$rank, decreasing = TRUE)])\n\np &lt;- \ndfs_ride_start_loc_casual_ranked_20 |&gt; \n  ggplot(aes(x = ride_count, y = station_name)) +\n    geom_bar(stat = \"identity\") +\n    labs(title = \"Top 20 stations by CASUAL riders\", size = 14) +\n    labs(x = \"Ride frequency\", y = \"Station name\") +\n    scale_x_continuous(labels = comma)\n\n# Save the summary data\nwrite_csv(dfs_ride_start_loc_casual_ranked_20, \n          \"../data/analyzed_datasets/dfs_ride_start_loc_casual_ranked_20.csv\")\n\n# Save the plot\nplot_name &lt;- deparse(substitute(dfs_ride_start_loc_casual_ranked_20))\nggsave(paste(\"../data/analyzed_datasets/\", plot_name, \".png\"), p, width = 6, height = 4, dpi = 300)\np\n\n\n\n\n\n# Create a styled table with proper number format\n\ndfs_ride_start_loc_casual_ranked_20$ride_count &lt;- format(dfs_ride_start_loc_casual_ranked_20$ride_count, big.mark = \",\")\n\nstyled_table &lt;- \n  kable(dfs_ride_start_loc_casual_ranked_20, format = \"html\", align = \"c\")  |&gt; \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n\nstyled_table\n\n\n\n\nrank\nstation_id\nstation_name\nride_count\n\n\n\n\n1\n13022\nStreeter Dr & Grand Ave\n46,750\n\n\n2\n13300\nDuSable Lake Shore Dr & Monroe St\n26,117\n\n\n3\n13042\nMichigan Ave & Oak St\n20,291\n\n\n4\nLF-005\nDuSable Lake Shore Dr & North Blvd\n20,202\n\n\n5\n13008\nMillennium Park\n19,517\n\n\n6\n15544\nShedd Aquarium\n17,959\n\n\n7\nTA1308000001\nTheater on the Lake\n15,606\n\n\n8\nTA1308000050\nWells St & Concord Ln\n14,555\n\n\n9\n13146\nClark St & Armitage Ave\n11,879\n\n\n10\nTA1307000039\nClark St & Elm St\n11,665\n\n\n11\n13179\nClark St & Lincoln Ave\n11,580\n\n\n12\nKA1503000064\nDusable Harbor\n11,555\n\n\n13\nSL-005\nIndiana Ave & Roosevelt Rd\n11,319\n\n\n14\nKA1504000135\nWells St & Elm St\n11,121\n\n\n15\n632\nClark St & Newport St\n10,816\n\n\n16\n13137\nBroadway & Barry Ave\n10,458\n\n\n17\nTA1307000134\nWilton Ave & Belmont Ave\n10,336\n\n\n18\nTA1308000012\nMontrose Harbor\n10,129\n\n\n19\n13431\nAdler Planetarium\n9,890\n\n\n20\nTA1307000117\nWabash Ave & Grand Ave\n9,716\n\n\n\n\n\n\n\n\n\nShare\n\n\nAct"
  },
  {
    "objectID": "projects/cyclistic-bike-share-analysis.html#how-does-a-bike-share-navigate-speedy-success",
    "href": "projects/cyclistic-bike-share-analysis.html#how-does-a-bike-share-navigate-speedy-success",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "How Does a Bike-Share Navigate Speedy Success?",
    "text": "How Does a Bike-Share Navigate Speedy Success?\n\n\nScenario\nCyclistic is a fictional bike-share company based in Chicago, dedicated to optimizing its future success by maximizing the number of annual memberships. As the director of marketing, you recognize the importance of understanding the distinct usage patterns between casual riders and annual members in order to develop an effective marketing strategy. The goal is to convert casual riders into loyal annual members, ultimately driving the company’s growth.\n\n\nCharacters and teams\n\nCyclistic: A bike-share program that features more than 5,800 bicycles and 600 docking stations. Cyclistic sets itself apart by also offering reclining bikes, hand tricycles, and cargo bikes, making bike-share more inclusive to people with disabilities and riders who can’t use a standard two-wheeled bike. The majority of riders opt for traditional bikes; about 8% of riders use the assistive options. Cyclistic users are more likely to ride for leisure, but about 30% use them to commute to work each day.\nLily Moreno: The director of marketing and your manager. Moreno is responsible for the development of campaigns and initiatives to promote the bike-share program. These may include email, social media, and other channels.\nCyclistic marketing analytics team: A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy. You joined this team six months ago and have been busy learning about Cyclistic’s mission and business goals — as well as how you, as a junior data analyst, can help Cyclistic achieve them.\nCyclistic executive team: The notoriously detail-oriented executive team will decide whether to approve the recommended marketing program.\n\n\n\nAbout the company\nIn 2016, Cyclistic launched a successful bike-share offering. Since then, the program has grown to a fleet of 5,824 bicycles that are geotracked and locked into a network of 692 stations across Chicago. The bikes can be unlocked from one station and returned to any other station in the system anytime.\nUntil now, Cyclistic’s marketing strategy relied on building general awareness and appealing to broad consumer segments. One approach that helped make these things possible was the flexibility of its pricing plans: single-ride passes, full-day passes, and annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers who purchase annual memberships are Cyclistic members.\nCyclistic’s finance analysts have concluded that annual members are much more profitable than casual riders. Although the pricing flexibility helps Cyclistic attract more customers, Moreno believes that maximizing the number of annual members will be key to future growth. Rather than creating a marketing campaign that targets all-new customers, Moreno believes there is a very good chance to convert casual riders into members. She notes that casual riders are already aware of the Cyclistic program and have chosen Cyclistic for their mobility needs.\nMoreno has set a clear goal: Design marketing strategies aimed at converting casual riders into annual members. In order to do that, however, the marketing analyst team needs to better understand how annual members and casual riders differ, why casual riders would buy a membership, and how digital media could affect their marketing tactics. Moreno and her team are interested in analyzing the Cyclistic historical bike trip data to identify trends.\n\n\nProject objective and key deliverables\nKey questions to answer:\n\n\n“How do annual members and casual riders use Cyclistic bikes differently?”\n\n\nReport requirements:\n\n\nA clear statement of the business task.\nA description of all data sources used.\nDocumentation of any cleaning or manipulation of data.\nA summary of your analysis.\nSupporting visualizations and key findings.\nYour top three recommendations based on your analysis.\n\n\n\n\nAsk\n\n\nPrepare\n\n\nProcess\nR language and its packages are used for processing the data. It is required to have the following R packages installed prior to further data processing.\n\ntidyverse for data import and data wrangling\nlubridate for date functions\nggplot for visualization\n\n\n#---------------------------------------\n# Load required libraries.\n# Packages must be installed first.\n#---------------------------------------\n\noptions(warning = FALSE)\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(leaflet)\n\ngetwd() \n\n[1] \"C:/Users/Joon/git/albert-joonyoung-park.github.io/projects\"\n\n\nStep 1: Load past 12 month’s of data in CSV files into dataframes.\n\n#---------------------------------------\n# Collect data\n#---------------------------------------\noptions(warning = FALSE)\n\ntrip_05 &lt;- read_csv(\"../data/202205-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_05)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_06 &lt;- read_csv(\"../data/202206-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_06)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_07 &lt;- read_csv(\"../data/202207-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_07)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_08 &lt;- read_csv(\"../data/202208-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_08)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_09 &lt;- read_csv(\"../data/202209-divvy-publictripdata.csv\", show_col_types = FALSE)\nspec(trip_09)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_10 &lt;- read_csv(\"../data/202210-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_10)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_11 &lt;- read_csv(\"../data/202211-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_11)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_12 &lt;- read_csv(\"../data/202212-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_12)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_01 &lt;- read_csv(\"../data/202301-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_01)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_02 &lt;- read_csv(\"../data/202302-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_02)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_03 &lt;- read_csv(\"../data/202303-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_03)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\ntrip_04 &lt;- read_csv(\"../data/202304-divvy-tripdata.csv\", show_col_types = FALSE)\nspec(trip_04)\n\ncols(\n  ride_id = col_character(),\n  rideable_type = col_character(),\n  started_at = col_datetime(format = \"\"),\n  ended_at = col_datetime(format = \"\"),\n  start_station_name = col_character(),\n  start_station_id = col_character(),\n  end_station_name = col_character(),\n  end_station_id = col_character(),\n  start_lat = col_double(),\n  start_lng = col_double(),\n  end_lat = col_double(),\n  end_lng = col_double(),\n  member_casual = col_character()\n)\n\n\nStep 2: Inspect and rename column names, if required, to be more meaningful, and make the column names, if required, to be the same across the multiple data frames.\n\n#-------------------------------------------\n# Inspect column names\n#-------------------------------------------\n\ncolnames(trip_01)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_02)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_03)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_04)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_05)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_06)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_07)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_08)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_09)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_10)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_11)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\ncolnames(trip_12)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n\n\n#-------------------------------------------\n# Inspect dataframe structures\n#-------------------------------------------\n\nstr(trip_01)\n\nspc_tbl_ [190,301 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:190301] \"F96D5A74A3E41399\" \"13CB7EB698CEDB88\" \"BD88A2E670661CE5\" \"C90792D034FED968\" ...\n $ rideable_type     : chr [1:190301] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:190301], format: \"2023-01-21 20:05:42\" \"2023-01-10 15:37:36\" ...\n $ ended_at          : POSIXct[1:190301], format: \"2023-01-21 20:16:33\" \"2023-01-10 15:46:05\" ...\n $ start_station_name: chr [1:190301] \"Lincoln Ave & Fullerton Ave\" \"Kimbark Ave & 53rd St\" \"Western Ave & Lunt Ave\" \"Kimbark Ave & 53rd St\" ...\n $ start_station_id  : chr [1:190301] \"TA1309000058\" \"TA1309000037\" \"RP-005\" \"TA1309000037\" ...\n $ end_station_name  : chr [1:190301] \"Hampden Ct & Diversey Ave\" \"Greenwood Ave & 47th St\" \"Valli Produce - Evanston Plaza\" \"Greenwood Ave & 47th St\" ...\n $ end_station_id    : chr [1:190301] \"202480.0\" \"TA1308000002\" \"599\" \"TA1308000002\" ...\n $ start_lat         : num [1:190301] 41.9 41.8 42 41.8 41.8 ...\n $ start_lng         : num [1:190301] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:190301] 41.9 41.8 42 41.8 41.8 ...\n $ end_lng           : num [1:190301] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:190301] \"member\" \"member\" \"casual\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_02)\n\nspc_tbl_ [190,445 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:190445] \"CBCD0D7777F0E45F\" \"F3EC5FCE5FF39DE9\" \"E54C1F27FA9354FF\" \"3D561E04F739CC45\" ...\n $ rideable_type     : chr [1:190445] \"classic_bike\" \"electric_bike\" \"classic_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:190445], format: \"2023-02-14 11:59:42\" \"2023-02-15 13:53:48\" ...\n $ ended_at          : POSIXct[1:190445], format: \"2023-02-14 12:13:38\" \"2023-02-15 13:59:08\" ...\n $ start_station_name: chr [1:190445] \"Southport Ave & Clybourn Ave\" \"Clarendon Ave & Gordon Ter\" \"Southport Ave & Clybourn Ave\" \"Southport Ave & Clybourn Ave\" ...\n $ start_station_id  : chr [1:190445] \"TA1309000030\" \"13379\" \"TA1309000030\" \"TA1309000030\" ...\n $ end_station_name  : chr [1:190445] \"Clark St & Schiller St\" \"Sheridan Rd & Lawrence Ave\" \"Aberdeen St & Monroe St\" \"Franklin St & Adams St (Temp)\" ...\n $ end_station_id    : chr [1:190445] \"TA1309000024\" \"TA1309000041\" \"13156\" \"TA1309000008\" ...\n $ start_lat         : num [1:190445] 41.9 42 41.9 41.9 41.8 ...\n $ start_lng         : num [1:190445] -87.7 -87.6 -87.7 -87.7 -87.6 ...\n $ end_lat           : num [1:190445] 41.9 42 41.9 41.9 41.8 ...\n $ end_lng           : num [1:190445] -87.6 -87.7 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:190445] \"casual\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_03)\n\nspc_tbl_ [258,678 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:258678] \"6842AA605EE9FBB3\" \"F984267A75B99A8C\" \"FF7CF57CFE026D02\" \"6B61B916032CB6D6\" ...\n $ rideable_type     : chr [1:258678] \"electric_bike\" \"electric_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:258678], format: \"2023-03-16 08:20:34\" \"2023-03-04 14:07:06\" ...\n $ ended_at          : POSIXct[1:258678], format: \"2023-03-16 08:22:52\" \"2023-03-04 14:15:31\" ...\n $ start_station_name: chr [1:258678] \"Clark St & Armitage Ave\" \"Public Rack - Kedzie Ave & Argyle St\" \"Orleans St & Chestnut St (NEXT Apts)\" \"Desplaines St & Kinzie St\" ...\n $ start_station_id  : chr [1:258678] \"13146\" \"491\" \"620\" \"TA1306000003\" ...\n $ end_station_name  : chr [1:258678] \"Larrabee St & Webster Ave\" NA \"Clark St & Randolph St\" \"Sheffield Ave & Kingsbury St\" ...\n $ end_station_id    : chr [1:258678] \"13193\" NA \"TA1305000030\" \"13154\" ...\n $ start_lat         : num [1:258678] 41.9 42 41.9 41.9 41.9 ...\n $ start_lng         : num [1:258678] -87.6 -87.7 -87.6 -87.6 -87.7 ...\n $ end_lat           : num [1:258678] 41.9 42 41.9 41.9 41.9 ...\n $ end_lng           : num [1:258678] -87.6 -87.7 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:258678] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_04)\n\nspc_tbl_ [426,590 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:426590] \"8FE8F7D9C10E88C7\" \"34E4ED3ADF1D821B\" \"5296BF07A2F77CB5\" \"40759916B76D5D52\" ...\n $ rideable_type     : chr [1:426590] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:426590], format: \"2023-04-02 08:37:28\" \"2023-04-19 11:29:02\" ...\n $ ended_at          : POSIXct[1:426590], format: \"2023-04-02 08:41:37\" \"2023-04-19 11:52:12\" ...\n $ start_station_name: chr [1:426590] NA NA NA NA ...\n $ start_station_id  : chr [1:426590] NA NA NA NA ...\n $ end_station_name  : chr [1:426590] NA NA NA NA ...\n $ end_station_id    : chr [1:426590] NA NA NA NA ...\n $ start_lat         : num [1:426590] 41.8 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:426590] -87.6 -87.7 -87.7 -87.7 -87.7 ...\n $ end_lat           : num [1:426590] 41.8 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:426590] -87.6 -87.7 -87.7 -87.7 -87.6 ...\n $ member_casual     : chr [1:426590] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_05)\n\nspc_tbl_ [634,858 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:634858] \"EC2DE40644C6B0F4\" \"1C31AD03897EE385\" \"1542FBEC830415CF\" \"6FF59852924528F8\" ...\n $ rideable_type     : chr [1:634858] \"classic_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:634858], format: \"2022-05-23 23:06:58\" \"2022-05-11 08:53:28\" ...\n $ ended_at          : POSIXct[1:634858], format: \"2022-05-23 23:40:19\" \"2022-05-11 09:31:22\" ...\n $ start_station_name: chr [1:634858] \"Wabash Ave & Grand Ave\" \"DuSable Lake Shore Dr & Monroe St\" \"Clinton St & Madison St\" \"Clinton St & Madison St\" ...\n $ start_station_id  : chr [1:634858] \"TA1307000117\" \"13300\" \"TA1305000032\" \"TA1305000032\" ...\n $ end_station_name  : chr [1:634858] \"Halsted St & Roscoe St\" \"Field Blvd & South Water St\" \"Wood St & Milwaukee Ave\" \"Clark St & Randolph St\" ...\n $ end_station_id    : chr [1:634858] \"TA1309000025\" \"15534\" \"13221\" \"TA1305000030\" ...\n $ start_lat         : num [1:634858] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:634858] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:634858] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:634858] -87.6 -87.6 -87.7 -87.6 -87.7 ...\n $ member_casual     : chr [1:634858] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_06)\n\nspc_tbl_ [769,204 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:769204] \"600CFD130D0FD2A4\" \"F5E6B5C1682C6464\" \"B6EB6D27BAD771D2\" \"C9C320375DE1D5C6\" ...\n $ rideable_type     : chr [1:769204] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:769204], format: \"2022-06-30 17:27:53\" \"2022-06-30 18:39:52\" ...\n $ ended_at          : POSIXct[1:769204], format: \"2022-06-30 17:35:15\" \"2022-06-30 18:47:28\" ...\n $ start_station_name: chr [1:769204] NA NA NA NA ...\n $ start_station_id  : chr [1:769204] NA NA NA NA ...\n $ end_station_name  : chr [1:769204] NA NA NA NA ...\n $ end_station_id    : chr [1:769204] NA NA NA NA ...\n $ start_lat         : num [1:769204] 41.9 41.9 41.9 41.8 41.9 ...\n $ start_lng         : num [1:769204] -87.6 -87.6 -87.7 -87.7 -87.6 ...\n $ end_lat           : num [1:769204] 41.9 41.9 41.9 41.8 41.9 ...\n $ end_lng           : num [1:769204] -87.6 -87.6 -87.6 -87.7 -87.6 ...\n $ member_casual     : chr [1:769204] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_07)\n\nspc_tbl_ [823,488 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:823488] \"954144C2F67B1932\" \"292E027607D218B6\" \"57765852588AD6E0\" \"B5B6BE44314590E6\" ...\n $ rideable_type     : chr [1:823488] \"classic_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:823488], format: \"2022-07-05 08:12:47\" \"2022-07-26 12:53:38\" ...\n $ ended_at          : POSIXct[1:823488], format: \"2022-07-05 08:24:32\" \"2022-07-26 12:55:31\" ...\n $ start_station_name: chr [1:823488] \"Ashland Ave & Blackhawk St\" \"Buckingham Fountain (Temp)\" \"Buckingham Fountain (Temp)\" \"Buckingham Fountain (Temp)\" ...\n $ start_station_id  : chr [1:823488] \"13224\" \"15541\" \"15541\" \"15541\" ...\n $ end_station_name  : chr [1:823488] \"Kingsbury St & Kinzie St\" \"Michigan Ave & 8th St\" \"Michigan Ave & 8th St\" \"Woodlawn Ave & 55th St\" ...\n $ end_station_id    : chr [1:823488] \"KA1503000043\" \"623\" \"623\" \"TA1307000164\" ...\n $ start_lat         : num [1:823488] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:823488] -87.7 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:823488] 41.9 41.9 41.9 41.8 41.9 ...\n $ end_lng           : num [1:823488] -87.6 -87.6 -87.6 -87.6 -87.7 ...\n $ member_casual     : chr [1:823488] \"member\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_08)\n\nspc_tbl_ [785,932 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:785932] \"550CF7EFEAE0C618\" \"DAD198F405F9C5F5\" \"E6F2BC47B65CB7FD\" \"F597830181C2E13C\" ...\n $ rideable_type     : chr [1:785932] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:785932], format: \"2022-08-07 21:34:15\" \"2022-08-08 14:39:21\" ...\n $ ended_at          : POSIXct[1:785932], format: \"2022-08-07 21:41:46\" \"2022-08-08 14:53:23\" ...\n $ start_station_name: chr [1:785932] NA NA NA NA ...\n $ start_station_id  : chr [1:785932] NA NA NA NA ...\n $ end_station_name  : chr [1:785932] NA NA NA NA ...\n $ end_station_id    : chr [1:785932] NA NA NA NA ...\n $ start_lat         : num [1:785932] 41.9 41.9 42 41.9 41.9 ...\n $ start_lng         : num [1:785932] -87.7 -87.6 -87.7 -87.7 -87.7 ...\n $ end_lat           : num [1:785932] 41.9 41.9 42 42 41.8 ...\n $ end_lng           : num [1:785932] -87.7 -87.6 -87.7 -87.7 -87.7 ...\n $ member_casual     : chr [1:785932] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_09)\n\nspc_tbl_ [701,339 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:701339] \"5156990AC19CA285\" \"E12D4A16BF51C274\" \"A02B53CD7DB72DD7\" \"C82E05FEE872DF11\" ...\n $ rideable_type     : chr [1:701339] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:701339], format: \"2022-09-01 08:36:22\" \"2022-09-01 17:11:29\" ...\n $ ended_at          : POSIXct[1:701339], format: \"2022-09-01 08:39:05\" \"2022-09-01 17:14:45\" ...\n $ start_station_name: chr [1:701339] NA NA NA NA ...\n $ start_station_id  : chr [1:701339] NA NA NA NA ...\n $ end_station_name  : chr [1:701339] \"California Ave & Milwaukee Ave\" NA NA NA ...\n $ end_station_id    : chr [1:701339] \"13084\" NA NA NA ...\n $ start_lat         : num [1:701339] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:701339] -87.7 -87.6 -87.6 -87.7 -87.7 ...\n $ end_lat           : num [1:701339] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:701339] -87.7 -87.6 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:701339] \"casual\" \"casual\" \"casual\" \"casual\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_10)\n\nspc_tbl_ [558,685 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:558685] \"A50255C1E17942AB\" \"DB692A70BD2DD4E3\" \"3C02727AAF60F873\" \"47E653FDC2D99236\" ...\n $ rideable_type     : chr [1:558685] \"classic_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ started_at        : POSIXct[1:558685], format: \"2022-10-14 17:13:30\" \"2022-10-01 16:29:26\" ...\n $ ended_at          : POSIXct[1:558685], format: \"2022-10-14 17:19:39\" \"2022-10-01 16:49:06\" ...\n $ start_station_name: chr [1:558685] \"Noble St & Milwaukee Ave\" \"Damen Ave & Charleston St\" \"Hoyne Ave & Balmoral Ave\" \"Rush St & Cedar St\" ...\n $ start_station_id  : chr [1:558685] \"13290\" \"13288\" \"655\" \"KA1504000133\" ...\n $ end_station_name  : chr [1:558685] \"Larrabee St & Division St\" \"Damen Ave & Cullerton St\" \"Western Ave & Leland Ave\" \"Orleans St & Chestnut St (NEXT Apts)\" ...\n $ end_station_id    : chr [1:558685] \"KA1504000079\" \"13089\" \"TA1307000140\" \"620\" ...\n $ start_lat         : num [1:558685] 41.9 41.9 42 41.9 41.9 ...\n $ start_lng         : num [1:558685] -87.7 -87.7 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:558685] 41.9 41.9 42 41.9 41.9 ...\n $ end_lng           : num [1:558685] -87.6 -87.7 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:558685] \"member\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_11)\n\nspc_tbl_ [337,735 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:337735] \"BCC66FC6FAB27CC7\" \"772AB67E902C180F\" \"585EAD07FDEC0152\" \"91C4E7ED3C262FF9\" ...\n $ rideable_type     : chr [1:337735] \"electric_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:337735], format: \"2022-11-10 06:21:55\" \"2022-11-04 07:31:55\" ...\n $ ended_at          : POSIXct[1:337735], format: \"2022-11-10 06:31:27\" \"2022-11-04 07:46:25\" ...\n $ start_station_name: chr [1:337735] \"Canal St & Adams St\" \"Canal St & Adams St\" \"Indiana Ave & Roosevelt Rd\" \"Indiana Ave & Roosevelt Rd\" ...\n $ start_station_id  : chr [1:337735] \"13011\" \"13011\" \"SL-005\" \"SL-005\" ...\n $ end_station_name  : chr [1:337735] \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" \"St. Clair St & Erie St\" ...\n $ end_station_id    : chr [1:337735] \"13016\" \"13016\" \"13016\" \"13016\" ...\n $ start_lat         : num [1:337735] 41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num [1:337735] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ end_lat           : num [1:337735] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:337735] -87.6 -87.6 -87.6 -87.6 -87.6 ...\n $ member_casual     : chr [1:337735] \"member\" \"member\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nstr(trip_12)\n\nspc_tbl_ [181,806 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:181806] \"65DBD2F447EC51C2\" \"0C201AA7EA0EA1AD\" \"E0B148CCB358A49D\" \"54C5775D2B7C9188\" ...\n $ rideable_type     : chr [1:181806] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:181806], format: \"2022-12-05 10:47:18\" \"2022-12-18 06:42:33\" ...\n $ ended_at          : POSIXct[1:181806], format: \"2022-12-05 10:56:34\" \"2022-12-18 07:08:44\" ...\n $ start_station_name: chr [1:181806] \"Clifton Ave & Armitage Ave\" \"Broadway & Belmont Ave\" \"Sangamon St & Lake St\" \"Shields Ave & 31st St\" ...\n $ start_station_id  : chr [1:181806] \"TA1307000163\" \"13277\" \"TA1306000015\" \"KA1503000038\" ...\n $ end_station_name  : chr [1:181806] \"Sedgwick St & Webster Ave\" \"Sedgwick St & Webster Ave\" \"St. Clair St & Erie St\" \"Damen Ave & Madison St\" ...\n $ end_station_id    : chr [1:181806] \"13191\" \"13191\" \"13016\" \"13134\" ...\n $ start_lat         : num [1:181806] 41.9 41.9 41.9 41.8 41.9 ...\n $ start_lng         : num [1:181806] -87.7 -87.6 -87.7 -87.6 -87.7 ...\n $ end_lat           : num [1:181806] 41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num [1:181806] -87.6 -87.6 -87.6 -87.7 -87.7 ...\n $ member_casual     : chr [1:181806] \"member\" \"casual\" \"member\" \"member\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ride_id = col_character(),\n  ..   rideable_type = col_character(),\n  ..   started_at = col_datetime(format = \"\"),\n  ..   ended_at = col_datetime(format = \"\"),\n  ..   start_station_name = col_character(),\n  ..   start_station_id = col_character(),\n  ..   end_station_name = col_character(),\n  ..   end_station_id = col_character(),\n  ..   start_lat = col_double(),\n  ..   start_lng = col_double(),\n  ..   end_lat = col_double(),\n  ..   end_lng = col_double(),\n  ..   member_casual = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n#-------------------------------------------\n# Merge all dataframes into one\n#-------------------------------------------\nall_trips &lt;- bind_rows(trip_01, trip_02, trip_03,\n                       trip_04, trip_05, trip_06,\n                       trip_07, trip_08, trip_09,\n                       trip_10, trip_11, trip_12,)\n\nglimpse(all_trips)\n\nRows: 5,859,061\nColumns: 13\n$ ride_id            &lt;chr&gt; \"F96D5A74A3E41399\", \"13CB7EB698CEDB88\", \"BD88A2E670…\n$ rideable_type      &lt;chr&gt; \"electric_bike\", \"classic_bike\", \"electric_bike\", \"…\n$ started_at         &lt;dttm&gt; 2023-01-21 20:05:42, 2023-01-10 15:37:36, 2023-01-…\n$ ended_at           &lt;dttm&gt; 2023-01-21 20:16:33, 2023-01-10 15:46:05, 2023-01-…\n$ start_station_name &lt;chr&gt; \"Lincoln Ave & Fullerton Ave\", \"Kimbark Ave & 53rd …\n$ start_station_id   &lt;chr&gt; \"TA1309000058\", \"TA1309000037\", \"RP-005\", \"TA130900…\n$ end_station_name   &lt;chr&gt; \"Hampden Ct & Diversey Ave\", \"Greenwood Ave & 47th …\n$ end_station_id     &lt;chr&gt; \"202480.0\", \"TA1308000002\", \"599\", \"TA1308000002\", …\n$ start_lat          &lt;dbl&gt; 41.92407, 41.79957, 42.00857, 41.79957, 41.79957, 4…\n$ start_lng          &lt;dbl&gt; -87.64628, -87.59475, -87.69048, -87.59475, -87.594…\n$ end_lat            &lt;dbl&gt; 41.93000, 41.80983, 42.03974, 41.80983, 41.80983, 4…\n$ end_lng            &lt;dbl&gt; -87.64000, -87.59938, -87.69941, -87.59938, -87.599…\n$ member_casual      &lt;chr&gt; \"member\", \"member\", \"casual\", \"member\", \"member\", \"…\n\n\n\n#---------------------------------------------------------------\n# Data inspection, clean-up and manipulation for analysis\n#---------------------------------------------------------------\nhead(all_trips)\n\n# A tibble: 6 × 13\n  ride_id          rideable_type started_at          ended_at           \n  &lt;chr&gt;            &lt;chr&gt;         &lt;dttm&gt;              &lt;dttm&gt;             \n1 F96D5A74A3E41399 electric_bike 2023-01-21 20:05:42 2023-01-21 20:16:33\n2 13CB7EB698CEDB88 classic_bike  2023-01-10 15:37:36 2023-01-10 15:46:05\n3 BD88A2E670661CE5 electric_bike 2023-01-02 07:51:57 2023-01-02 08:05:11\n4 C90792D034FED968 classic_bike  2023-01-22 10:52:58 2023-01-22 11:01:44\n5 3397017529188E8A classic_bike  2023-01-12 13:58:01 2023-01-12 14:13:20\n6 58E68156DAE3E311 electric_bike 2023-01-31 07:18:03 2023-01-31 07:21:16\n# ℹ 9 more variables: start_station_name &lt;chr&gt;, start_station_id &lt;chr&gt;,\n#   end_station_name &lt;chr&gt;, end_station_id &lt;chr&gt;, start_lat &lt;dbl&gt;,\n#   start_lng &lt;dbl&gt;, end_lat &lt;dbl&gt;, end_lng &lt;dbl&gt;, member_casual &lt;chr&gt;\n\ntail(all_trips)\n\n# A tibble: 6 × 13\n  ride_id          rideable_type started_at          ended_at           \n  &lt;chr&gt;            &lt;chr&gt;         &lt;dttm&gt;              &lt;dttm&gt;             \n1 7BDEDE9860418B53 classic_bike  2022-12-07 06:52:45 2022-12-07 06:56:36\n2 43ABEE85B6E15DCA classic_bike  2022-12-05 06:51:04 2022-12-05 06:54:48\n3 F041C89A3D1F0270 electric_bike 2022-12-14 17:06:28 2022-12-14 17:19:27\n4 A2BECB88430BE156 classic_bike  2022-12-08 16:27:47 2022-12-08 16:32:20\n5 37B392960E566F58 classic_bike  2022-12-28 09:37:38 2022-12-28 09:41:34\n6 2DD1587210BA45AE classic_bike  2022-12-09 00:27:25 2022-12-09 00:35:28\n# ℹ 9 more variables: start_station_name &lt;chr&gt;, start_station_id &lt;chr&gt;,\n#   end_station_name &lt;chr&gt;, end_station_id &lt;chr&gt;, start_lat &lt;dbl&gt;,\n#   start_lng &lt;dbl&gt;, end_lat &lt;dbl&gt;, end_lng &lt;dbl&gt;, member_casual &lt;chr&gt;\n\ncolnames(all_trips)\n\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\nnrow(all_trips)\n\n[1] 5859061\n\ndim(all_trips)\n\n[1] 5859061      13\n\nsummary(all_trips)\n\n   ride_id          rideable_type        started_at                    \n Length:5859061     Length:5859061     Min.   :2022-05-01 00:00:06.00  \n Class :character   Class :character   1st Qu.:2022-07-03 11:12:30.00  \n Mode  :character   Mode  :character   Median :2022-08-28 12:44:57.00  \n                                       Mean   :2022-09-19 13:39:54.23  \n                                       3rd Qu.:2022-11-08 06:30:21.00  \n                                       Max.   :2023-04-30 23:59:05.00  \n                                                                       \n    ended_at                      start_station_name start_station_id  \n Min.   :2022-05-01 00:05:17.00   Length:5859061     Length:5859061    \n 1st Qu.:2022-07-03 11:38:52.00   Class :character   Class :character  \n Median :2022-08-28 13:07:09.00   Mode  :character   Mode  :character  \n Mean   :2022-09-19 13:58:50.35                                        \n 3rd Qu.:2022-11-08 06:43:39.00                                        \n Max.   :2023-05-03 10:37:12.00                                        \n                                                                       \n end_station_name   end_station_id       start_lat       start_lng     \n Length:5859061     Length:5859061     Min.   :41.64   Min.   :-87.84  \n Class :character   Class :character   1st Qu.:41.88   1st Qu.:-87.66  \n Mode  :character   Mode  :character   Median :41.90   Median :-87.64  \n                                       Mean   :41.90   Mean   :-87.65  \n                                       3rd Qu.:41.93   3rd Qu.:-87.63  \n                                       Max.   :42.07   Max.   :-87.52  \n                                                                       \n    end_lat         end_lng       member_casual     \n Min.   : 0.00   Min.   :-88.14   Length:5859061    \n 1st Qu.:41.88   1st Qu.:-87.66   Class :character  \n Median :41.90   Median :-87.64   Mode  :character  \n Mean   :41.90   Mean   :-87.65                     \n 3rd Qu.:41.93   3rd Qu.:-87.63                     \n Max.   :42.37   Max.   :  0.00                     \n NA's   :5973    NA's   :5973                       \n\n\nStep 3: Perform further data transformation for data consistency, and fix any issues prior to analysis.\n\n#-------------------------------------------\n# Address any data issues and fix them\n#-------------------------------------------\n\n# Check columns for aggregation level\ndfs_member_casual &lt;- table(all_trips$member_casual)\ndfs_rideable_type &lt;- table(all_trips$rideable_type)\ndfs_member_casual\n\n\n casual  member \n2358307 3500754 \n\ndfs_rideable_type\n\n\n classic_bike   docked_bike electric_bike \n      2642585        170518       3045958 \n\n# Add columns for ride date to increase aggregation level - month, day, year, day of the week\nall_trips &lt;- \n  all_trips |&gt; \n    mutate(\n      start_date = as.Date(started_at),\n      start_month = format(start_date, \"%m\"),\n      start_day = format(start_date, \"%d\"),\n      start_year = format(start_date, \"%Y\"),\n      start_weekday = format(start_date, \"%A\"),\n      .after = started_at\n    )\n\n# Add a column for ride length in seconds for analysis\nall_trips &lt;- \n  all_trips |&gt; \n    mutate(\n      ride_length = as.numeric(difftime(ended_at, started_at)),\n      .after = ended_at\n    )\n\nis.numeric(all_trips$ride_length)\n\n[1] TRUE\n\n# Check structure of the data frame\nstr(all_trips)\n\ntibble [5,859,061 × 19] (S3: tbl_df/tbl/data.frame)\n $ ride_id           : chr [1:5859061] \"F96D5A74A3E41399\" \"13CB7EB698CEDB88\" \"BD88A2E670661CE5\" \"C90792D034FED968\" ...\n $ rideable_type     : chr [1:5859061] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n $ started_at        : POSIXct[1:5859061], format: \"2023-01-21 20:05:42\" \"2023-01-10 15:37:36\" ...\n $ start_date        : Date[1:5859061], format: \"2023-01-21\" \"2023-01-10\" ...\n $ start_month       : chr [1:5859061] \"01\" \"01\" \"01\" \"01\" ...\n $ start_day         : chr [1:5859061] \"21\" \"10\" \"02\" \"22\" ...\n $ start_year        : chr [1:5859061] \"2023\" \"2023\" \"2023\" \"2023\" ...\n $ start_weekday     : chr [1:5859061] \"Saturday\" \"Tuesday\" \"Monday\" \"Sunday\" ...\n $ ended_at          : POSIXct[1:5859061], format: \"2023-01-21 20:16:33\" \"2023-01-10 15:46:05\" ...\n $ ride_length       : num [1:5859061] 651 509 794 526 919 193 840 561 747 753 ...\n $ start_station_name: chr [1:5859061] \"Lincoln Ave & Fullerton Ave\" \"Kimbark Ave & 53rd St\" \"Western Ave & Lunt Ave\" \"Kimbark Ave & 53rd St\" ...\n $ start_station_id  : chr [1:5859061] \"TA1309000058\" \"TA1309000037\" \"RP-005\" \"TA1309000037\" ...\n $ end_station_name  : chr [1:5859061] \"Hampden Ct & Diversey Ave\" \"Greenwood Ave & 47th St\" \"Valli Produce - Evanston Plaza\" \"Greenwood Ave & 47th St\" ...\n $ end_station_id    : chr [1:5859061] \"202480.0\" \"TA1308000002\" \"599\" \"TA1308000002\" ...\n $ start_lat         : num [1:5859061] 41.9 41.8 42 41.8 41.8 ...\n $ start_lng         : num [1:5859061] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ end_lat           : num [1:5859061] 41.9 41.8 42 41.8 41.8 ...\n $ end_lng           : num [1:5859061] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n $ member_casual     : chr [1:5859061] \"member\" \"member\" \"casual\" \"member\" ...\n\n\nData exclusion - bad data\n\n#-------------------------------------------\n# Exclude data that are not suitable\n#-------------------------------------------\n\n# Remove data that has negative ride length\nall_trips_tidy &lt;- \n  all_trips |&gt; \n    filter(ride_length &gt; 0)\n\n\n\nAnalyze\nStep 4: Conduct descriptive analysis\n\n# Descriptive analysis on ride_length (all figures in seconds)\n\nmean(all_trips_tidy$ride_length)\n\n[1] 1136.371\n\nmedian(all_trips_tidy$ride_length)\n\n[1] 599\n\nmin(all_trips_tidy$ride_length)\n\n[1] 1\n\nmax(all_trips_tidy$ride_length)\n\n[1] 2483235\n\nsummary(all_trips_tidy$ride_length)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      1     339     599    1136    1075 2483235 \n\n\n\n# Get insights of ride length info for member or casual riders\n\nall_trips_tidy |&gt; \n  group_by(member_casual) |&gt; \n  summarize(\n    mean_ride_length = as.integer(mean(ride_length)),\n    median_ride_length = median(ride_length),\n    min_ride_length = min(ride_length),\n    max_ride_length = max(ride_length)\n  )\n\n# A tibble: 2 × 5\n  member_casual mean_ride_length median_ride_length min_ride_length\n  &lt;chr&gt;                    &lt;int&gt;              &lt;dbl&gt;           &lt;dbl&gt;\n1 casual                    1709                751               1\n2 member                     750                520               1\n# ℹ 1 more variable: max_ride_length &lt;dbl&gt;\n\n\n\n# Average ride_length by each day of the week for members and casual riders\nall_trips_tidy |&gt; \n  group_by(member_casual, start_weekday) |&gt; \n  summarize(mean_ride_length = as.integer(mean(ride_length))) |&gt; \n  arrange(factor(start_weekday, levels = c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")), member_casual)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 14 × 3\n# Groups:   member_casual [2]\n   member_casual start_weekday mean_ride_length\n   &lt;chr&gt;         &lt;chr&gt;                    &lt;int&gt;\n 1 casual        Sunday                    2006\n 2 member        Sunday                     829\n 3 casual        Monday                    1702\n 4 member        Monday                     718\n 5 casual        Tuesday                   1520\n 6 member        Tuesday                    717\n 7 casual        Wednesday                 1450\n 8 member        Wednesday                  713\n 9 casual        Thursday                  1482\n10 member        Thursday                   726\n11 casual        Friday                    1651\n12 member        Friday                     741\n13 casual        Saturday                  1934\n14 member        Saturday                   835\n\n\n\n# Analyze ridership summary data by rider type and weekday\nall_trips_tidy |&gt; \n  mutate(weekday = wday(started_at, label = TRUE)) |&gt; \n  group_by(member_casual, weekday) |&gt; \n  summarise(\n    number_of_rides = n(),\n    average_duration = as.integer(mean(ride_length))\n  ) |&gt; \n  arrange(member_casual, weekday)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 14 × 4\n# Groups:   member_casual [2]\n   member_casual weekday number_of_rides average_duration\n   &lt;chr&gt;         &lt;ord&gt;             &lt;int&gt;            &lt;int&gt;\n 1 casual        Sun              388779             2006\n 2 casual        Mon              275726             1702\n 3 casual        Tue              272624             1520\n 4 casual        Wed              284556             1450\n 5 casual        Thu              318437             1482\n 6 casual        Fri              350053             1651\n 7 casual        Sat              467873             1934\n 8 member        Sun              402040              829\n 9 member        Mon              484532              718\n10 member        Tue              544350              717\n11 member        Wed              556882              713\n12 member        Thu              560837              726\n13 member        Fri              497434              741\n14 member        Sat              454394              835\n\n\nVisualization\n\n# Construct dataframe for visualization\n\ndf_ride_count &lt;- \n  all_trips_tidy |&gt; \n    mutate(weekday = wday(started_at, label = TRUE)) |&gt; \n    group_by(member_casual, weekday) |&gt; \n    summarise(\n      number_of_rides = n(),\n      average_duration = as.integer(mean(ride_length))\n    ) |&gt; \n    arrange(member_casual, weekday)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n\n# Visualize the number of rides by rider type\n\ndf_ride_count |&gt; \n  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +\n    geom_col(position = \"dodge\") +\n    labs(title = \"Ridership by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Number of rides\", fill = \"User type\")\n\n\n\n\n\n# Visualize the average ride duration by rider type\n\ndf_ride_count |&gt; \n  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +\n    geom_col(position = \"dodge\") +\n    labs(title = \"Average Ride Duration (sec.) by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Number of rides\", fill = \"User type\")\n\n\n\n\n\n# Visualize ride duration per weekday\n\nall_trips_tidy |&gt; \n  ggplot(aes(x = start_weekday, y = ride_length, color = member_casual)) +\n    geom_point() +\n    labs(title = \"Ride Duration (sec.) by User Type\", size = 14) +\n    labs(x = \"Weekday\", y = \"Ride duration\", fill = \"User type\")\n\n\n\n\n\n# Visualize rideable type by rider type\n\ndfs_rideable_type_member_casual &lt;- \n  all_trips_tidy |&gt; \n    group_by(member_casual, rideable_type) |&gt; \n    summarize(ride_count = n()) |&gt; \n    arrange(member_casual, ride_count)\n\n`summarise()` has grouped output by 'member_casual'. You can override using the\n`.groups` argument.\n\n\n\ndfs_rideable_type_member_casual |&gt; \n  ggplot(aes(x = rideable_type, y = ride_count, fill = member_casual )) +\n    geom_bar(stat = \"identity\") +\n    geom_text(\n      aes(label = ride_count), \n      size = 4,\n      position = position_stack(vjust = 0.5),\n      colour = \"white\"\n    ) +\n    scale_y_continuous(labels = comma)\n\n\n\n\nGeographical mapping of ridership by rider type, using leaflet\n\n# Prepare your data in a smaller set for plotting\n\ndfs_ride_start_loc &lt;- \n  all_trips_tidy |&gt; \n    select(start_station_name, start_lat, start_lng, member_casual) |&gt; \n    group_by(start_station_name, start_lat, start_lng, member_casual) |&gt; \n    summarize(\n      ride_frequency = n()\n      ) |&gt; \n    filter(ride_frequency &gt;= 1200) # limit the ride_frequency &gt;= 1200\n\n`summarise()` has grouped output by 'start_station_name', 'start_lat',\n'start_lng'. You can override using the `.groups` argument.\n\n\n\n# Create a leaflet map centered on Chicago with map view\n# Display both member and casual ridership information\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 12) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~ifelse(member_casual == \"member\", \"blue\", \"red\"),\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\n\n# Create a leaflet map centered on Chicago with map view\n# Display casual ridership information only\n\ndfs_ride_start_loc_casual &lt;- \n  dfs_ride_start_loc |&gt; \n    filter(member_casual == \"casual\")\n\nleaflet(options = leafletOptions(zoomControl = TRUE)) |&gt; \n  setView(lng = -87.6298, lat = 41.8781, zoom = 12) |&gt; \n  addTiles() |&gt; \n   addCircleMarkers(\n     data = dfs_ride_start_loc_casual,\n     lat = ~start_lat,\n     lng = ~start_lng,\n     radius = ~10,\n     color = ~\"red\",\n     popup = ~paste(start_station_name, \" | \", member_casual, \" | \", ride_frequency),\n     stroke = FALSE,\n     fillOpacity = 0.0001 * dfs_ride_start_loc$ride_frequency\n  )  \n\n\n\n\n\nQuestion: What stations are most frequently used by casual riders in the past 12 months?\n\n# Retrieve frequent station information used by casual riders in the past 12 months\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\ndfs_ride_start_loc_casual &lt;- \n  all_trips_tidy |&gt; \n    filter(member_casual == \"casual\") |&gt; \n    group_by(start_station_id, start_station_name, member_casual) |&gt; \n    summarize(\n      ride_frequency = n(),\n      # need to set \"drop\" option to assign ranking properly later\n      .groups = \"drop\" \n      )\n\ndfs_ride_start_loc_casual &lt;- \n  dfs_ride_start_loc_casual |&gt; \n    arrange(desc(ride_frequency)) |&gt; \n    mutate(rank = rank(-ride_frequency, ties.method = 'min')) |&gt; \n    select(rank, start_station_id, start_station_name, ride_frequency)\n\ndfs_ride_start_loc_casual_ranked &lt;- \n  dfs_ride_start_loc_casual |&gt; \n    rename(\n      \"rank\" = \"rank\", \n      \"station_id\" = \"start_station_id\",\n      \"station_name\" = \"start_station_name\",\n      \"ride_count\" = \"ride_frequency\"\n    )\n\n# Replace NA in station_id and station_name with \"*Unknown*\"\ndfs_ride_start_loc_casual_ranked &lt;- \n  dfs_ride_start_loc_casual_ranked |&gt; \n    mutate_at(c('station_id','station_name'), ~replace_na(.,\"*Unknown*\"))\n  \n# List top 20 stations\ndfs_ride_start_loc_casual_ranked_20 &lt;- dfs_ride_start_loc_casual_ranked[1:20,]\n\n# Create a styled table\nstyled_table &lt;- kable(dfs_ride_start_loc_casual_ranked_20, format = \"html\", align = \"c\")  |&gt; \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\nstyled_table\n\n\n\n\nrank\nstation_id\nstation_name\nride_count\n\n\n\n\n1\n*Unknown*\n*Unknown*\n346314\n\n\n2\n13022\nStreeter Dr & Grand Ave\n57427\n\n\n3\n13300\nDuSable Lake Shore Dr & Monroe St\n32037\n\n\n4\n13042\nMichigan Ave & Oak St\n25380\n\n\n5\n13008\nMillennium Park\n25279\n\n\n6\nLF-005\nDuSable Lake Shore Dr & North Blvd\n23705\n\n\n7\n15544\nShedd Aquarium\n20424\n\n\n8\nTA1308000001\nTheater on the Lake\n18482\n\n\n9\nTA1308000050\nWells St & Concord Ln\n16482\n\n\n10\nKA1503000064\nDusable Harbor\n14260\n\n\n11\nSL-005\nIndiana Ave & Roosevelt Rd\n13885\n\n\n12\n13146\nClark St & Armitage Ave\n13759\n\n\n13\n13179\nClark St & Lincoln Ave\n13263\n\n\n14\nTA1307000039\nClark St & Elm St\n13085\n\n\n15\nTA1308000012\nMontrose Harbor\n12834\n\n\n16\n13137\nBroadway & Barry Ave\n12482\n\n\n17\nKA1504000135\nWells St & Elm St\n12459\n\n\n18\n632\nClark St & Newport St\n12409\n\n\n19\nTA1307000134\nWilton Ave & Belmont Ave\n11912\n\n\n20\nTA1307000117\nWabash Ave & Grand Ave\n11677\n\n\n\n\n\n\n\nExport the summary data that can be used in other tools - SQL, Spreadsheet, Power BI, Tableau\n\nwrite.csv(df_ride_count, file = \"../data/summary_df_ride_count.csv\")\n\n\n\nShare\n\n\nAct"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "The Cyclistic Bike-share Analysis Case Study\n\n\n\n\n\n\n\n\n\nFebruary 5, 2023\n\n\nAlbert Joonyoung Park\n\n\n19 min\n\n\n\n\n\n\nNo matching items"
  }
]